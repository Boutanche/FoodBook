### YamlMime:ManagedReference
items:
- uid: BLL.Services.RestaurantService
  commentId: T:BLL.Services.RestaurantService
  id: RestaurantService
  parent: BLL.Services
  children:
  - BLL.Services.RestaurantService.#ctor(DAL.UOW.IUnitOfWork)
  - BLL.Services.RestaurantService._db
  - BLL.Services.RestaurantService.AddDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  - BLL.Services.RestaurantService.CreateDish(BO.Entity.Dish)
  - BLL.Services.RestaurantService.CreateIngredient(BO.Entity.Ingredients)
  - BLL.Services.RestaurantService.CreateListOfIngredient(BO.Entity.ListOfIngredient)
  - BLL.Services.RestaurantService.CreateMenu(BO.Entity.Menu)
  - BLL.Services.RestaurantService.CreateService(BO.Entity.Service)
  - BLL.Services.RestaurantService.GetAllDish
  - BLL.Services.RestaurantService.GetAllIngredients
  - BLL.Services.RestaurantService.GetAllListOfIngredient
  - BLL.Services.RestaurantService.GetAllMenu
  - BLL.Services.RestaurantService.GetAllService
  - BLL.Services.RestaurantService.GetAllTypeOfDish
  - BLL.Services.RestaurantService.GetDishById(System.Int32)
  - BLL.Services.RestaurantService.GetDishByName(System.String)
  - BLL.Services.RestaurantService.GetIdMenuByDate(System.DateTime)
  - BLL.Services.RestaurantService.GetIngredientById(System.Int32)
  - BLL.Services.RestaurantService.GetIngredientsOfDishById(System.Int32)
  - BLL.Services.RestaurantService.GetListOfIngredientByIdDish(System.Int32)
  - BLL.Services.RestaurantService.GetMenuById(System.Int32)
  - BLL.Services.RestaurantService.GetServiceById(System.Int32)
  - BLL.Services.RestaurantService.GetServicesByIdMenu(System.Int32)
  - BLL.Services.RestaurantService.GetServicesOfMenuById(System.Int32)
  - BLL.Services.RestaurantService.GetTypeOfDishById(System.Int32)
  - BLL.Services.RestaurantService.ModifyDish(BO.Entity.Dish)
  - BLL.Services.RestaurantService.ModifyIngredient(BO.Entity.Ingredients)
  - BLL.Services.RestaurantService.ModifyListOfIngredient(BO.Entity.ListOfIngredient)
  - BLL.Services.RestaurantService.NextMenu(System.DateTime)
  - BLL.Services.RestaurantService.PreviousMenu(System.DateTime)
  - BLL.Services.RestaurantService.RemoveDishById(System.Int32)
  - BLL.Services.RestaurantService.RemoveDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  - BLL.Services.RestaurantService.RemoveIngredientById(System.Int32)
  - BLL.Services.RestaurantService.RemoveListOfIngredientById(System.Int32)
  langs:
  - csharp
  - vb
  name: RestaurantService
  nameWithType: RestaurantService
  fullName: BLL.Services.RestaurantService
  type: Class
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: RestaurantService
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 15
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nAll concern about restauration service\n"
  example: []
  syntax:
    content: 'class RestaurantService : IRestaurantService'
    content.vb: >-
      Class RestaurantService
          Implements IRestaurantService
  inheritance:
  - System.Object
  implements:
  - BLL.Services.IRestaurantService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - class
  modifiers.vb:
  - Class
- uid: BLL.Services.RestaurantService._db
  commentId: F:BLL.Services.RestaurantService._db
  id: _db
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: _db
  nameWithType: RestaurantService._db
  fullName: BLL.Services.RestaurantService._db
  type: Field
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: _db
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 18
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: readonly IUnitOfWork _db
    return:
      type: DAL.UOW.IUnitOfWork
    content.vb: ReadOnly _db As IUnitOfWork
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: BLL.Services.RestaurantService.#ctor(DAL.UOW.IUnitOfWork)
  commentId: M:BLL.Services.RestaurantService.#ctor(DAL.UOW.IUnitOfWork)
  id: '#ctor(DAL.UOW.IUnitOfWork)'
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: RestaurantService(IUnitOfWork)
  nameWithType: RestaurantService.RestaurantService(IUnitOfWork)
  fullName: BLL.Services.RestaurantService.RestaurantService(DAL.UOW.IUnitOfWork)
  type: Constructor
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: .ctor
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 19
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public RestaurantService(IUnitOfWork unitOfWork)
    parameters:
    - id: unitOfWork
      type: DAL.UOW.IUnitOfWork
    content.vb: Public Sub New(unitOfWork As IUnitOfWork)
  overload: BLL.Services.RestaurantService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.CreateIngredient(BO.Entity.Ingredients)
  commentId: M:BLL.Services.RestaurantService.CreateIngredient(BO.Entity.Ingredients)
  id: CreateIngredient(BO.Entity.Ingredients)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: CreateIngredient(Ingredients)
  nameWithType: RestaurantService.CreateIngredient(Ingredients)
  fullName: BLL.Services.RestaurantService.CreateIngredient(BO.Entity.Ingredients)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: CreateIngredient
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 30
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nCreate an ingredient !\n"
  example: []
  syntax:
    content: public Task<Ingredients> CreateIngredient(Ingredients ingredient)
    parameters:
    - id: ingredient
      type: BO.Entity.Ingredients
      description: Ingredients
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Ingredients}
      description: Ingredients
    content.vb: Public Function CreateIngredient(ingredient As Ingredients) As Task(Of Ingredients)
  overload: BLL.Services.RestaurantService.CreateIngredient*
  implements:
  - BLL.Services.IRestaurantService.CreateIngredient(BO.Entity.Ingredients)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.ModifyIngredient(BO.Entity.Ingredients)
  commentId: M:BLL.Services.RestaurantService.ModifyIngredient(BO.Entity.Ingredients)
  id: ModifyIngredient(BO.Entity.Ingredients)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: ModifyIngredient(Ingredients)
  nameWithType: RestaurantService.ModifyIngredient(Ingredients)
  fullName: BLL.Services.RestaurantService.ModifyIngredient(BO.Entity.Ingredients)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: ModifyIngredient
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 43
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nModify an ingredient\n"
  example: []
  syntax:
    content: public Task<Ingredients> ModifyIngredient(Ingredients ingredient)
    parameters:
    - id: ingredient
      type: BO.Entity.Ingredients
      description: Ingredients
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Ingredients}
      description: Ingredients
    content.vb: Public Function ModifyIngredient(ingredient As Ingredients) As Task(Of Ingredients)
  overload: BLL.Services.RestaurantService.ModifyIngredient*
  implements:
  - BLL.Services.IRestaurantService.ModifyIngredient(BO.Entity.Ingredients)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.RemoveIngredientById(System.Int32)
  commentId: M:BLL.Services.RestaurantService.RemoveIngredientById(System.Int32)
  id: RemoveIngredientById(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: RemoveIngredientById(Int32)
  nameWithType: RestaurantService.RemoveIngredientById(Int32)
  fullName: BLL.Services.RestaurantService.RemoveIngredientById(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: RemoveIngredientById
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 65
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nRemove one ingredient with its Id\n"
  example: []
  syntax:
    content: public Task<bool> RemoveIngredientById(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Int
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: bool
    content.vb: Public Function RemoveIngredientById(id As Integer) As Task(Of Boolean)
  overload: BLL.Services.RestaurantService.RemoveIngredientById*
  implements:
  - BLL.Services.IRestaurantService.RemoveIngredientById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetAllIngredients
  commentId: M:BLL.Services.RestaurantService.GetAllIngredients
  id: GetAllIngredients
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetAllIngredients()
  nameWithType: RestaurantService.GetAllIngredients()
  fullName: BLL.Services.RestaurantService.GetAllIngredients()
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetAllIngredients
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 86
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nGet all ingredients\n"
  example: []
  syntax:
    content: public Task<List<Ingredients>> GetAllIngredients()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Ingredients}}
      description: List of Ingredients >
    content.vb: Public Function GetAllIngredients As Task(Of List(Of Ingredients))
  overload: BLL.Services.RestaurantService.GetAllIngredients*
  implements:
  - BLL.Services.IRestaurantService.GetAllIngredients
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetIngredientById(System.Int32)
  commentId: M:BLL.Services.RestaurantService.GetIngredientById(System.Int32)
  id: GetIngredientById(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetIngredientById(Int32)
  nameWithType: RestaurantService.GetIngredientById(Int32)
  fullName: BLL.Services.RestaurantService.GetIngredientById(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetIngredientById
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 99
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nGet Ingredient By IF\n"
  example: []
  syntax:
    content: public Task<Ingredients> GetIngredientById(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Ingredients}
      description: 'Ingredients '
    content.vb: Public Function GetIngredientById(id As Integer) As Task(Of Ingredients)
  overload: BLL.Services.RestaurantService.GetIngredientById*
  implements:
  - BLL.Services.IRestaurantService.GetIngredientById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetAllDish
  commentId: M:BLL.Services.RestaurantService.GetAllDish
  id: GetAllDish
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetAllDish()
  nameWithType: RestaurantService.GetAllDish()
  fullName: BLL.Services.RestaurantService.GetAllDish()
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetAllDish
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 112
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nGet A list of all dishes on the FoodBook data base.\n"
  example: []
  syntax:
    content: public Task<List<Dish>> GetAllDish()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Dish}}
      description: A List of Dish
    content.vb: Public Function GetAllDish As Task(Of List(Of Dish))
  overload: BLL.Services.RestaurantService.GetAllDish*
  implements:
  - BLL.Services.IRestaurantService.GetAllDish
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetDishByName(System.String)
  commentId: M:BLL.Services.RestaurantService.GetDishByName(System.String)
  id: GetDishByName(System.String)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetDishByName(String)
  nameWithType: RestaurantService.GetDishByName(String)
  fullName: BLL.Services.RestaurantService.GetDishByName(System.String)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetDishByName
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 118
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<Dish> GetDishByName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Dish}
    content.vb: Public Function GetDishByName(name As String) As Task(Of Dish)
  overload: BLL.Services.RestaurantService.GetDishByName*
  implements:
  - BLL.Services.IRestaurantService.GetDishByName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetDishById(System.Int32)
  commentId: M:BLL.Services.RestaurantService.GetDishById(System.Int32)
  id: GetDishById(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetDishById(Int32)
  nameWithType: RestaurantService.GetDishById(Int32)
  fullName: BLL.Services.RestaurantService.GetDishById(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetDishById
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 130
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nGet a Dish By an ID\n"
  example: []
  syntax:
    content: public Task<Dish> GetDishById(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Int
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Dish}
      description: Dish
    content.vb: Public Function GetDishById(id As Integer) As Task(Of Dish)
  overload: BLL.Services.RestaurantService.GetDishById*
  implements:
  - BLL.Services.IRestaurantService.GetDishById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.CreateDish(BO.Entity.Dish)
  commentId: M:BLL.Services.RestaurantService.CreateDish(BO.Entity.Dish)
  id: CreateDish(BO.Entity.Dish)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: CreateDish(Dish)
  nameWithType: RestaurantService.CreateDish(Dish)
  fullName: BLL.Services.RestaurantService.CreateDish(BO.Entity.Dish)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: CreateDish
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 143
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nCreate a Dish\n"
  example: []
  syntax:
    content: public Task<Dish> CreateDish(Dish dish)
    parameters:
    - id: dish
      type: BO.Entity.Dish
      description: Dish
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Dish}
      description: A new Dish
    content.vb: Public Function CreateDish(dish As Dish) As Task(Of Dish)
  overload: BLL.Services.RestaurantService.CreateDish*
  implements:
  - BLL.Services.IRestaurantService.CreateDish(BO.Entity.Dish)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.ModifyDish(BO.Entity.Dish)
  commentId: M:BLL.Services.RestaurantService.ModifyDish(BO.Entity.Dish)
  id: ModifyDish(BO.Entity.Dish)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: ModifyDish(Dish)
  nameWithType: RestaurantService.ModifyDish(Dish)
  fullName: BLL.Services.RestaurantService.ModifyDish(BO.Entity.Dish)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: ModifyDish
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 156
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nModifier un plat\n"
  example: []
  syntax:
    content: public Task<Dish> ModifyDish(Dish dish)
    parameters:
    - id: dish
      type: BO.Entity.Dish
      description: Dish
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Dish}
      description: Un plat modifié
    content.vb: Public Function ModifyDish(dish As Dish) As Task(Of Dish)
  overload: BLL.Services.RestaurantService.ModifyDish*
  implements:
  - BLL.Services.IRestaurantService.ModifyDish(BO.Entity.Dish)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.RemoveDishById(System.Int32)
  commentId: M:BLL.Services.RestaurantService.RemoveDishById(System.Int32)
  id: RemoveDishById(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: RemoveDishById(Int32)
  nameWithType: RestaurantService.RemoveDishById(Int32)
  fullName: BLL.Services.RestaurantService.RemoveDishById(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: RemoveDishById
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 178
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nSupprimer un plat\n"
  example: []
  syntax:
    content: public Task<bool> RemoveDishById(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Int
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: 'Code No Content : 204'
    content.vb: Public Function RemoveDishById(id As Integer) As Task(Of Boolean)
  overload: BLL.Services.RestaurantService.RemoveDishById*
  implements:
  - BLL.Services.IRestaurantService.RemoveDishById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetIngredientsOfDishById(System.Int32)
  commentId: M:BLL.Services.RestaurantService.GetIngredientsOfDishById(System.Int32)
  id: GetIngredientsOfDishById(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetIngredientsOfDishById(Int32)
  nameWithType: RestaurantService.GetIngredientsOfDishById(Int32)
  fullName: BLL.Services.RestaurantService.GetIngredientsOfDishById(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetIngredientsOfDishById
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 195
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<Dish> GetIngredientsOfDishById(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Dish}
    content.vb: Public Function GetIngredientsOfDishById(id As Integer) As Task(Of Dish)
  overload: BLL.Services.RestaurantService.GetIngredientsOfDishById*
  implements:
  - BLL.Services.IRestaurantService.GetIngredientsOfDishById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetAllTypeOfDish
  commentId: M:BLL.Services.RestaurantService.GetAllTypeOfDish
  id: GetAllTypeOfDish
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetAllTypeOfDish()
  nameWithType: RestaurantService.GetAllTypeOfDish()
  fullName: BLL.Services.RestaurantService.GetAllTypeOfDish()
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetAllTypeOfDish
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 205
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nGet a list of TypeOfDish\n"
  example: []
  syntax:
    content: public Task<List<TypeOfDish>> GetAllTypeOfDish()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.TypeOfDish}}
      description: ''
    content.vb: Public Function GetAllTypeOfDish As Task(Of List(Of TypeOfDish))
  overload: BLL.Services.RestaurantService.GetAllTypeOfDish*
  implements:
  - BLL.Services.IRestaurantService.GetAllTypeOfDish
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetTypeOfDishById(System.Int32)
  commentId: M:BLL.Services.RestaurantService.GetTypeOfDishById(System.Int32)
  id: GetTypeOfDishById(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetTypeOfDishById(Int32)
  nameWithType: RestaurantService.GetTypeOfDishById(Int32)
  fullName: BLL.Services.RestaurantService.GetTypeOfDishById(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetTypeOfDishById
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 216
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nGet a TypeOfDish\n"
  example: []
  syntax:
    content: public Task<TypeOfDish> GetTypeOfDishById(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    return:
      type: System.Threading.Tasks.Task{BO.Entity.TypeOfDish}
      description: ''
    content.vb: Public Function GetTypeOfDishById(id As Integer) As Task(Of TypeOfDish)
  overload: BLL.Services.RestaurantService.GetTypeOfDishById*
  implements:
  - BLL.Services.IRestaurantService.GetTypeOfDishById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetAllService
  commentId: M:BLL.Services.RestaurantService.GetAllService
  id: GetAllService
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetAllService()
  nameWithType: RestaurantService.GetAllService()
  fullName: BLL.Services.RestaurantService.GetAllService()
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetAllService
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 225
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<List<Service>> GetAllService()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Service}}
    content.vb: Public Function GetAllService As Task(Of List(Of Service))
  overload: BLL.Services.RestaurantService.GetAllService*
  implements:
  - BLL.Services.IRestaurantService.GetAllService
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetServiceById(System.Int32)
  commentId: M:BLL.Services.RestaurantService.GetServiceById(System.Int32)
  id: GetServiceById(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetServiceById(Int32)
  nameWithType: RestaurantService.GetServiceById(Int32)
  fullName: BLL.Services.RestaurantService.GetServiceById(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetServiceById
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 232
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<Service> GetServiceById(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Service}
    content.vb: Public Function GetServiceById(id As Integer) As Task(Of Service)
  overload: BLL.Services.RestaurantService.GetServiceById*
  implements:
  - BLL.Services.IRestaurantService.GetServiceById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetServicesByIdMenu(System.Int32)
  commentId: M:BLL.Services.RestaurantService.GetServicesByIdMenu(System.Int32)
  id: GetServicesByIdMenu(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetServicesByIdMenu(Int32)
  nameWithType: RestaurantService.GetServicesByIdMenu(Int32)
  fullName: BLL.Services.RestaurantService.GetServicesByIdMenu(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetServicesByIdMenu
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 237
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<List<Service>> GetServicesByIdMenu(int idMenu)
    parameters:
    - id: idMenu
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Service}}
    content.vb: Public Function GetServicesByIdMenu(idMenu As Integer) As Task(Of List(Of Service))
  overload: BLL.Services.RestaurantService.GetServicesByIdMenu*
  implements:
  - BLL.Services.IRestaurantService.GetServicesByIdMenu(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.CreateService(BO.Entity.Service)
  commentId: M:BLL.Services.RestaurantService.CreateService(BO.Entity.Service)
  id: CreateService(BO.Entity.Service)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: CreateService(Service)
  nameWithType: RestaurantService.CreateService(Service)
  fullName: BLL.Services.RestaurantService.CreateService(BO.Entity.Service)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: CreateService
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 242
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<Service> CreateService(Service service)
    parameters:
    - id: service
      type: BO.Entity.Service
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Service}
    content.vb: Public Function CreateService(service As Service) As Task(Of Service)
  overload: BLL.Services.RestaurantService.CreateService*
  implements:
  - BLL.Services.IRestaurantService.CreateService(BO.Entity.Service)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.AddDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  commentId: M:BLL.Services.RestaurantService.AddDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  id: AddDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: AddDishForThisService(Dish, Service)
  nameWithType: RestaurantService.AddDishForThisService(Dish, Service)
  fullName: BLL.Services.RestaurantService.AddDishForThisService(BO.Entity.Dish, BO.Entity.Service)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: AddDishForThisService
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 247
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<bool> AddDishForThisService(Dish dish, Service service)
    parameters:
    - id: dish
      type: BO.Entity.Dish
    - id: service
      type: BO.Entity.Service
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function AddDishForThisService(dish As Dish, service As Service) As Task(Of Boolean)
  overload: BLL.Services.RestaurantService.AddDishForThisService*
  implements:
  - BLL.Services.IRestaurantService.AddDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.RemoveDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  commentId: M:BLL.Services.RestaurantService.RemoveDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  id: RemoveDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: RemoveDishForThisService(Dish, Service)
  nameWithType: RestaurantService.RemoveDishForThisService(Dish, Service)
  fullName: BLL.Services.RestaurantService.RemoveDishForThisService(BO.Entity.Dish, BO.Entity.Service)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: RemoveDishForThisService
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 252
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<bool> RemoveDishForThisService(Dish dish, Service service)
    parameters:
    - id: dish
      type: BO.Entity.Dish
    - id: service
      type: BO.Entity.Service
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function RemoveDishForThisService(dish As Dish, service As Service) As Task(Of Boolean)
  overload: BLL.Services.RestaurantService.RemoveDishForThisService*
  implements:
  - BLL.Services.IRestaurantService.RemoveDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetAllMenu
  commentId: M:BLL.Services.RestaurantService.GetAllMenu
  id: GetAllMenu
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetAllMenu()
  nameWithType: RestaurantService.GetAllMenu()
  fullName: BLL.Services.RestaurantService.GetAllMenu()
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetAllMenu
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 258
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<List<Menu>> GetAllMenu()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Menu}}
    content.vb: Public Function GetAllMenu As Task(Of List(Of Menu))
  overload: BLL.Services.RestaurantService.GetAllMenu*
  implements:
  - BLL.Services.IRestaurantService.GetAllMenu
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetMenuById(System.Int32)
  commentId: M:BLL.Services.RestaurantService.GetMenuById(System.Int32)
  id: GetMenuById(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetMenuById(Int32)
  nameWithType: RestaurantService.GetMenuById(Int32)
  fullName: BLL.Services.RestaurantService.GetMenuById(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetMenuById
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 265
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<Menu> GetMenuById(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Menu}
    content.vb: Public Function GetMenuById(id As Integer) As Task(Of Menu)
  overload: BLL.Services.RestaurantService.GetMenuById*
  implements:
  - BLL.Services.IRestaurantService.GetMenuById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.NextMenu(System.DateTime)
  commentId: M:BLL.Services.RestaurantService.NextMenu(System.DateTime)
  id: NextMenu(System.DateTime)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: NextMenu(DateTime)
  nameWithType: RestaurantService.NextMenu(DateTime)
  fullName: BLL.Services.RestaurantService.NextMenu(System.DateTime)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: NextMenu
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 271
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<DateTime> NextMenu(DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.Threading.Tasks.Task{System.DateTime}
    content.vb: Public Function NextMenu(date As Date) As Task(Of Date)
  overload: BLL.Services.RestaurantService.NextMenu*
  implements:
  - BLL.Services.IRestaurantService.NextMenu(System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.PreviousMenu(System.DateTime)
  commentId: M:BLL.Services.RestaurantService.PreviousMenu(System.DateTime)
  id: PreviousMenu(System.DateTime)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: PreviousMenu(DateTime)
  nameWithType: RestaurantService.PreviousMenu(DateTime)
  fullName: BLL.Services.RestaurantService.PreviousMenu(System.DateTime)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: PreviousMenu
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 276
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<DateTime> PreviousMenu(DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.Threading.Tasks.Task{System.DateTime}
    content.vb: Public Function PreviousMenu(date As Date) As Task(Of Date)
  overload: BLL.Services.RestaurantService.PreviousMenu*
  implements:
  - BLL.Services.IRestaurantService.PreviousMenu(System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetIdMenuByDate(System.DateTime)
  commentId: M:BLL.Services.RestaurantService.GetIdMenuByDate(System.DateTime)
  id: GetIdMenuByDate(System.DateTime)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetIdMenuByDate(DateTime)
  nameWithType: RestaurantService.GetIdMenuByDate(DateTime)
  fullName: BLL.Services.RestaurantService.GetIdMenuByDate(System.DateTime)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetIdMenuByDate
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 281
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<int> GetIdMenuByDate(DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function GetIdMenuByDate(date As Date) As Task(Of Integer)
  overload: BLL.Services.RestaurantService.GetIdMenuByDate*
  implements:
  - BLL.Services.IRestaurantService.GetIdMenuByDate(System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetServicesOfMenuById(System.Int32)
  commentId: M:BLL.Services.RestaurantService.GetServicesOfMenuById(System.Int32)
  id: GetServicesOfMenuById(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetServicesOfMenuById(Int32)
  nameWithType: RestaurantService.GetServicesOfMenuById(Int32)
  fullName: BLL.Services.RestaurantService.GetServicesOfMenuById(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetServicesOfMenuById
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 286
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<Menu> GetServicesOfMenuById(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Menu}
    content.vb: Public Function GetServicesOfMenuById(id As Integer) As Task(Of Menu)
  overload: BLL.Services.RestaurantService.GetServicesOfMenuById*
  implements:
  - BLL.Services.IRestaurantService.GetServicesOfMenuById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.CreateMenu(BO.Entity.Menu)
  commentId: M:BLL.Services.RestaurantService.CreateMenu(BO.Entity.Menu)
  id: CreateMenu(BO.Entity.Menu)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: CreateMenu(Menu)
  nameWithType: RestaurantService.CreateMenu(Menu)
  fullName: BLL.Services.RestaurantService.CreateMenu(BO.Entity.Menu)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: CreateMenu
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 291
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<Menu> CreateMenu(Menu menu)
    parameters:
    - id: menu
      type: BO.Entity.Menu
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Menu}
    content.vb: Public Function CreateMenu(menu As Menu) As Task(Of Menu)
  overload: BLL.Services.RestaurantService.CreateMenu*
  implements:
  - BLL.Services.IRestaurantService.CreateMenu(BO.Entity.Menu)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetAllListOfIngredient
  commentId: M:BLL.Services.RestaurantService.GetAllListOfIngredient
  id: GetAllListOfIngredient
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetAllListOfIngredient()
  nameWithType: RestaurantService.GetAllListOfIngredient()
  fullName: BLL.Services.RestaurantService.GetAllListOfIngredient()
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetAllListOfIngredient
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 298
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<List<ListOfIngredient>> GetAllListOfIngredient()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.ListOfIngredient}}
    content.vb: Public Function GetAllListOfIngredient As Task(Of List(Of ListOfIngredient))
  overload: BLL.Services.RestaurantService.GetAllListOfIngredient*
  implements:
  - BLL.Services.IRestaurantService.GetAllListOfIngredient
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.GetListOfIngredientByIdDish(System.Int32)
  commentId: M:BLL.Services.RestaurantService.GetListOfIngredientByIdDish(System.Int32)
  id: GetListOfIngredientByIdDish(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: GetListOfIngredientByIdDish(Int32)
  nameWithType: RestaurantService.GetListOfIngredientByIdDish(Int32)
  fullName: BLL.Services.RestaurantService.GetListOfIngredientByIdDish(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetListOfIngredientByIdDish
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 306
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<List<ListOfIngredient>> GetListOfIngredientByIdDish(int idDish)
    parameters:
    - id: idDish
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.ListOfIngredient}}
    content.vb: Public Function GetListOfIngredientByIdDish(idDish As Integer) As Task(Of List(Of ListOfIngredient))
  overload: BLL.Services.RestaurantService.GetListOfIngredientByIdDish*
  implements:
  - BLL.Services.IRestaurantService.GetListOfIngredientByIdDish(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.CreateListOfIngredient(BO.Entity.ListOfIngredient)
  commentId: M:BLL.Services.RestaurantService.CreateListOfIngredient(BO.Entity.ListOfIngredient)
  id: CreateListOfIngredient(BO.Entity.ListOfIngredient)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: CreateListOfIngredient(ListOfIngredient)
  nameWithType: RestaurantService.CreateListOfIngredient(ListOfIngredient)
  fullName: BLL.Services.RestaurantService.CreateListOfIngredient(BO.Entity.ListOfIngredient)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: CreateListOfIngredient
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 315
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nCréer une ListOfIngredient\n"
  example: []
  syntax:
    content: public Task<ListOfIngredient> CreateListOfIngredient(ListOfIngredient listOfIngredient)
    parameters:
    - id: listOfIngredient
      type: BO.Entity.ListOfIngredient
      description: ''
    return:
      type: System.Threading.Tasks.Task{BO.Entity.ListOfIngredient}
      description: ''
    content.vb: Public Function CreateListOfIngredient(listOfIngredient As ListOfIngredient) As Task(Of ListOfIngredient)
  overload: BLL.Services.RestaurantService.CreateListOfIngredient*
  implements:
  - BLL.Services.IRestaurantService.CreateListOfIngredient(BO.Entity.ListOfIngredient)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.ModifyListOfIngredient(BO.Entity.ListOfIngredient)
  commentId: M:BLL.Services.RestaurantService.ModifyListOfIngredient(BO.Entity.ListOfIngredient)
  id: ModifyListOfIngredient(BO.Entity.ListOfIngredient)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: ModifyListOfIngredient(ListOfIngredient)
  nameWithType: RestaurantService.ModifyListOfIngredient(ListOfIngredient)
  fullName: BLL.Services.RestaurantService.ModifyListOfIngredient(BO.Entity.ListOfIngredient)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: ModifyListOfIngredient
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 325
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<ListOfIngredient> ModifyListOfIngredient(ListOfIngredient listOfIngredient)
    parameters:
    - id: listOfIngredient
      type: BO.Entity.ListOfIngredient
    return:
      type: System.Threading.Tasks.Task{BO.Entity.ListOfIngredient}
    content.vb: Public Function ModifyListOfIngredient(listOfIngredient As ListOfIngredient) As Task(Of ListOfIngredient)
  overload: BLL.Services.RestaurantService.ModifyListOfIngredient*
  implements:
  - BLL.Services.IRestaurantService.ModifyListOfIngredient(BO.Entity.ListOfIngredient)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.RestaurantService.RemoveListOfIngredientById(System.Int32)
  commentId: M:BLL.Services.RestaurantService.RemoveListOfIngredientById(System.Int32)
  id: RemoveListOfIngredientById(System.Int32)
  parent: BLL.Services.RestaurantService
  langs:
  - csharp
  - vb
  name: RemoveListOfIngredientById(Int32)
  nameWithType: RestaurantService.RemoveListOfIngredientById(Int32)
  fullName: BLL.Services.RestaurantService.RemoveListOfIngredientById(System.Int32)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/RestaurantService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: RemoveListOfIngredientById
    path: E:/Fbook/FoodBook/Server/BLL/Services/RestaurantService.cs
    startLine: 330
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public Task<bool> RemoveListOfIngredientById(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function RemoveListOfIngredientById(id As Integer) As Task(Of Boolean)
  overload: BLL.Services.RestaurantService.RemoveListOfIngredientById*
  implements:
  - BLL.Services.IRestaurantService.RemoveListOfIngredientById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BLL.Services
  commentId: N:BLL.Services
  name: BLL.Services
  nameWithType: BLL.Services
  fullName: BLL.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BLL.Services.IRestaurantService
  commentId: T:BLL.Services.IRestaurantService
  parent: BLL.Services
  name: IRestaurantService
  nameWithType: IRestaurantService
  fullName: BLL.Services.IRestaurantService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DAL.UOW.IUnitOfWork
  commentId: T:DAL.UOW.IUnitOfWork
  parent: DAL.UOW
  name: IUnitOfWork
  nameWithType: IUnitOfWork
  fullName: DAL.UOW.IUnitOfWork
- uid: DAL.UOW
  commentId: N:DAL.UOW
  name: DAL.UOW
  nameWithType: DAL.UOW
  fullName: DAL.UOW
- uid: BLL.Services.RestaurantService.#ctor*
  commentId: Overload:BLL.Services.RestaurantService.#ctor
  name: RestaurantService
  nameWithType: RestaurantService.RestaurantService
  fullName: BLL.Services.RestaurantService.RestaurantService
- uid: BLL.Services.RestaurantService.CreateIngredient*
  commentId: Overload:BLL.Services.RestaurantService.CreateIngredient
  name: CreateIngredient
  nameWithType: RestaurantService.CreateIngredient
  fullName: BLL.Services.RestaurantService.CreateIngredient
- uid: BLL.Services.IRestaurantService.CreateIngredient(BO.Entity.Ingredients)
  commentId: M:BLL.Services.IRestaurantService.CreateIngredient(BO.Entity.Ingredients)
  parent: BLL.Services.IRestaurantService
  name: CreateIngredient(Ingredients)
  nameWithType: IRestaurantService.CreateIngredient(Ingredients)
  fullName: BLL.Services.IRestaurantService.CreateIngredient(BO.Entity.Ingredients)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.CreateIngredient(BO.Entity.Ingredients)
    name: CreateIngredient
    nameWithType: IRestaurantService.CreateIngredient
    fullName: BLL.Services.IRestaurantService.CreateIngredient
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Ingredients
    name: Ingredients
    nameWithType: Ingredients
    fullName: BO.Entity.Ingredients
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.CreateIngredient(BO.Entity.Ingredients)
    name: CreateIngredient
    nameWithType: IRestaurantService.CreateIngredient
    fullName: BLL.Services.IRestaurantService.CreateIngredient
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Ingredients
    name: Ingredients
    nameWithType: Ingredients
    fullName: BO.Entity.Ingredients
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.Ingredients
  commentId: T:BO.Entity.Ingredients
  parent: BO.Entity
  name: Ingredients
  nameWithType: Ingredients
  fullName: BO.Entity.Ingredients
- uid: System.Threading.Tasks.Task{BO.Entity.Ingredients}
  commentId: T:System.Threading.Tasks.Task{BO.Entity.Ingredients}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Ingredients>
  nameWithType: Task<Ingredients>
  fullName: System.Threading.Tasks.Task<BO.Entity.Ingredients>
  nameWithType.vb: Task(Of Ingredients)
  fullName.vb: System.Threading.Tasks.Task(Of BO.Entity.Ingredients)
  name.vb: Task(Of Ingredients)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.Ingredients
    name: Ingredients
    nameWithType: Ingredients
    fullName: BO.Entity.Ingredients
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.Ingredients
    name: Ingredients
    nameWithType: Ingredients
    fullName: BO.Entity.Ingredients
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity
  commentId: N:BO.Entity
  name: BO.Entity
  nameWithType: BO.Entity
  fullName: BO.Entity
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: BLL.Services.RestaurantService.ModifyIngredient*
  commentId: Overload:BLL.Services.RestaurantService.ModifyIngredient
  name: ModifyIngredient
  nameWithType: RestaurantService.ModifyIngredient
  fullName: BLL.Services.RestaurantService.ModifyIngredient
- uid: BLL.Services.IRestaurantService.ModifyIngredient(BO.Entity.Ingredients)
  commentId: M:BLL.Services.IRestaurantService.ModifyIngredient(BO.Entity.Ingredients)
  parent: BLL.Services.IRestaurantService
  name: ModifyIngredient(Ingredients)
  nameWithType: IRestaurantService.ModifyIngredient(Ingredients)
  fullName: BLL.Services.IRestaurantService.ModifyIngredient(BO.Entity.Ingredients)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.ModifyIngredient(BO.Entity.Ingredients)
    name: ModifyIngredient
    nameWithType: IRestaurantService.ModifyIngredient
    fullName: BLL.Services.IRestaurantService.ModifyIngredient
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Ingredients
    name: Ingredients
    nameWithType: Ingredients
    fullName: BO.Entity.Ingredients
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.ModifyIngredient(BO.Entity.Ingredients)
    name: ModifyIngredient
    nameWithType: IRestaurantService.ModifyIngredient
    fullName: BLL.Services.IRestaurantService.ModifyIngredient
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Ingredients
    name: Ingredients
    nameWithType: Ingredients
    fullName: BO.Entity.Ingredients
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.RemoveIngredientById*
  commentId: Overload:BLL.Services.RestaurantService.RemoveIngredientById
  name: RemoveIngredientById
  nameWithType: RestaurantService.RemoveIngredientById
  fullName: BLL.Services.RestaurantService.RemoveIngredientById
- uid: BLL.Services.IRestaurantService.RemoveIngredientById(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.RemoveIngredientById(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: RemoveIngredientById(Int32)
  nameWithType: IRestaurantService.RemoveIngredientById(Int32)
  fullName: BLL.Services.IRestaurantService.RemoveIngredientById(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.RemoveIngredientById(System.Int32)
    name: RemoveIngredientById
    nameWithType: IRestaurantService.RemoveIngredientById
    fullName: BLL.Services.IRestaurantService.RemoveIngredientById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.RemoveIngredientById(System.Int32)
    name: RemoveIngredientById
    nameWithType: IRestaurantService.RemoveIngredientById
    fullName: BLL.Services.IRestaurantService.RemoveIngredientById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetAllIngredients*
  commentId: Overload:BLL.Services.RestaurantService.GetAllIngredients
  name: GetAllIngredients
  nameWithType: RestaurantService.GetAllIngredients
  fullName: BLL.Services.RestaurantService.GetAllIngredients
- uid: BLL.Services.IRestaurantService.GetAllIngredients
  commentId: M:BLL.Services.IRestaurantService.GetAllIngredients
  parent: BLL.Services.IRestaurantService
  name: GetAllIngredients()
  nameWithType: IRestaurantService.GetAllIngredients()
  fullName: BLL.Services.IRestaurantService.GetAllIngredients()
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetAllIngredients
    name: GetAllIngredients
    nameWithType: IRestaurantService.GetAllIngredients
    fullName: BLL.Services.IRestaurantService.GetAllIngredients
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetAllIngredients
    name: GetAllIngredients
    nameWithType: IRestaurantService.GetAllIngredients
    fullName: BLL.Services.IRestaurantService.GetAllIngredients
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Ingredients}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Ingredients}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Ingredients>>
  nameWithType: Task<List<Ingredients>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<BO.Entity.Ingredients>>
  nameWithType.vb: Task(Of List(Of Ingredients))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of BO.Entity.Ingredients))
  name.vb: Task(Of List(Of Ingredients))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.Ingredients
    name: Ingredients
    nameWithType: Ingredients
    fullName: BO.Entity.Ingredients
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.Ingredients
    name: Ingredients
    nameWithType: Ingredients
    fullName: BO.Entity.Ingredients
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetIngredientById*
  commentId: Overload:BLL.Services.RestaurantService.GetIngredientById
  name: GetIngredientById
  nameWithType: RestaurantService.GetIngredientById
  fullName: BLL.Services.RestaurantService.GetIngredientById
- uid: BLL.Services.IRestaurantService.GetIngredientById(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.GetIngredientById(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: GetIngredientById(Int32)
  nameWithType: IRestaurantService.GetIngredientById(Int32)
  fullName: BLL.Services.IRestaurantService.GetIngredientById(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetIngredientById(System.Int32)
    name: GetIngredientById
    nameWithType: IRestaurantService.GetIngredientById
    fullName: BLL.Services.IRestaurantService.GetIngredientById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetIngredientById(System.Int32)
    name: GetIngredientById
    nameWithType: IRestaurantService.GetIngredientById
    fullName: BLL.Services.IRestaurantService.GetIngredientById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetAllDish*
  commentId: Overload:BLL.Services.RestaurantService.GetAllDish
  name: GetAllDish
  nameWithType: RestaurantService.GetAllDish
  fullName: BLL.Services.RestaurantService.GetAllDish
- uid: BLL.Services.IRestaurantService.GetAllDish
  commentId: M:BLL.Services.IRestaurantService.GetAllDish
  parent: BLL.Services.IRestaurantService
  name: GetAllDish()
  nameWithType: IRestaurantService.GetAllDish()
  fullName: BLL.Services.IRestaurantService.GetAllDish()
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetAllDish
    name: GetAllDish
    nameWithType: IRestaurantService.GetAllDish
    fullName: BLL.Services.IRestaurantService.GetAllDish
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetAllDish
    name: GetAllDish
    nameWithType: IRestaurantService.GetAllDish
    fullName: BLL.Services.IRestaurantService.GetAllDish
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Dish}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Dish}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Dish>>
  nameWithType: Task<List<Dish>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<BO.Entity.Dish>>
  nameWithType.vb: Task(Of List(Of Dish))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of BO.Entity.Dish))
  name.vb: Task(Of List(Of Dish))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetDishByName*
  commentId: Overload:BLL.Services.RestaurantService.GetDishByName
  name: GetDishByName
  nameWithType: RestaurantService.GetDishByName
  fullName: BLL.Services.RestaurantService.GetDishByName
- uid: BLL.Services.IRestaurantService.GetDishByName(System.String)
  commentId: M:BLL.Services.IRestaurantService.GetDishByName(System.String)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: GetDishByName(String)
  nameWithType: IRestaurantService.GetDishByName(String)
  fullName: BLL.Services.IRestaurantService.GetDishByName(System.String)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetDishByName(System.String)
    name: GetDishByName
    nameWithType: IRestaurantService.GetDishByName
    fullName: BLL.Services.IRestaurantService.GetDishByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetDishByName(System.String)
    name: GetDishByName
    nameWithType: IRestaurantService.GetDishByName
    fullName: BLL.Services.IRestaurantService.GetDishByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{BO.Entity.Dish}
  commentId: T:System.Threading.Tasks.Task{BO.Entity.Dish}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Dish>
  nameWithType: Task<Dish>
  fullName: System.Threading.Tasks.Task<BO.Entity.Dish>
  nameWithType.vb: Task(Of Dish)
  fullName.vb: System.Threading.Tasks.Task(Of BO.Entity.Dish)
  name.vb: Task(Of Dish)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetDishById*
  commentId: Overload:BLL.Services.RestaurantService.GetDishById
  name: GetDishById
  nameWithType: RestaurantService.GetDishById
  fullName: BLL.Services.RestaurantService.GetDishById
- uid: BLL.Services.IRestaurantService.GetDishById(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.GetDishById(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: GetDishById(Int32)
  nameWithType: IRestaurantService.GetDishById(Int32)
  fullName: BLL.Services.IRestaurantService.GetDishById(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetDishById(System.Int32)
    name: GetDishById
    nameWithType: IRestaurantService.GetDishById
    fullName: BLL.Services.IRestaurantService.GetDishById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetDishById(System.Int32)
    name: GetDishById
    nameWithType: IRestaurantService.GetDishById
    fullName: BLL.Services.IRestaurantService.GetDishById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.CreateDish*
  commentId: Overload:BLL.Services.RestaurantService.CreateDish
  name: CreateDish
  nameWithType: RestaurantService.CreateDish
  fullName: BLL.Services.RestaurantService.CreateDish
- uid: BLL.Services.IRestaurantService.CreateDish(BO.Entity.Dish)
  commentId: M:BLL.Services.IRestaurantService.CreateDish(BO.Entity.Dish)
  parent: BLL.Services.IRestaurantService
  name: CreateDish(Dish)
  nameWithType: IRestaurantService.CreateDish(Dish)
  fullName: BLL.Services.IRestaurantService.CreateDish(BO.Entity.Dish)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.CreateDish(BO.Entity.Dish)
    name: CreateDish
    nameWithType: IRestaurantService.CreateDish
    fullName: BLL.Services.IRestaurantService.CreateDish
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.CreateDish(BO.Entity.Dish)
    name: CreateDish
    nameWithType: IRestaurantService.CreateDish
    fullName: BLL.Services.IRestaurantService.CreateDish
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.Dish
  commentId: T:BO.Entity.Dish
  parent: BO.Entity
  name: Dish
  nameWithType: Dish
  fullName: BO.Entity.Dish
- uid: BLL.Services.RestaurantService.ModifyDish*
  commentId: Overload:BLL.Services.RestaurantService.ModifyDish
  name: ModifyDish
  nameWithType: RestaurantService.ModifyDish
  fullName: BLL.Services.RestaurantService.ModifyDish
- uid: BLL.Services.IRestaurantService.ModifyDish(BO.Entity.Dish)
  commentId: M:BLL.Services.IRestaurantService.ModifyDish(BO.Entity.Dish)
  parent: BLL.Services.IRestaurantService
  name: ModifyDish(Dish)
  nameWithType: IRestaurantService.ModifyDish(Dish)
  fullName: BLL.Services.IRestaurantService.ModifyDish(BO.Entity.Dish)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.ModifyDish(BO.Entity.Dish)
    name: ModifyDish
    nameWithType: IRestaurantService.ModifyDish
    fullName: BLL.Services.IRestaurantService.ModifyDish
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.ModifyDish(BO.Entity.Dish)
    name: ModifyDish
    nameWithType: IRestaurantService.ModifyDish
    fullName: BLL.Services.IRestaurantService.ModifyDish
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.RemoveDishById*
  commentId: Overload:BLL.Services.RestaurantService.RemoveDishById
  name: RemoveDishById
  nameWithType: RestaurantService.RemoveDishById
  fullName: BLL.Services.RestaurantService.RemoveDishById
- uid: BLL.Services.IRestaurantService.RemoveDishById(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.RemoveDishById(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: RemoveDishById(Int32)
  nameWithType: IRestaurantService.RemoveDishById(Int32)
  fullName: BLL.Services.IRestaurantService.RemoveDishById(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.RemoveDishById(System.Int32)
    name: RemoveDishById
    nameWithType: IRestaurantService.RemoveDishById
    fullName: BLL.Services.IRestaurantService.RemoveDishById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.RemoveDishById(System.Int32)
    name: RemoveDishById
    nameWithType: IRestaurantService.RemoveDishById
    fullName: BLL.Services.IRestaurantService.RemoveDishById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetIngredientsOfDishById*
  commentId: Overload:BLL.Services.RestaurantService.GetIngredientsOfDishById
  name: GetIngredientsOfDishById
  nameWithType: RestaurantService.GetIngredientsOfDishById
  fullName: BLL.Services.RestaurantService.GetIngredientsOfDishById
- uid: BLL.Services.IRestaurantService.GetIngredientsOfDishById(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.GetIngredientsOfDishById(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: GetIngredientsOfDishById(Int32)
  nameWithType: IRestaurantService.GetIngredientsOfDishById(Int32)
  fullName: BLL.Services.IRestaurantService.GetIngredientsOfDishById(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetIngredientsOfDishById(System.Int32)
    name: GetIngredientsOfDishById
    nameWithType: IRestaurantService.GetIngredientsOfDishById
    fullName: BLL.Services.IRestaurantService.GetIngredientsOfDishById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetIngredientsOfDishById(System.Int32)
    name: GetIngredientsOfDishById
    nameWithType: IRestaurantService.GetIngredientsOfDishById
    fullName: BLL.Services.IRestaurantService.GetIngredientsOfDishById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetAllTypeOfDish*
  commentId: Overload:BLL.Services.RestaurantService.GetAllTypeOfDish
  name: GetAllTypeOfDish
  nameWithType: RestaurantService.GetAllTypeOfDish
  fullName: BLL.Services.RestaurantService.GetAllTypeOfDish
- uid: BLL.Services.IRestaurantService.GetAllTypeOfDish
  commentId: M:BLL.Services.IRestaurantService.GetAllTypeOfDish
  parent: BLL.Services.IRestaurantService
  name: GetAllTypeOfDish()
  nameWithType: IRestaurantService.GetAllTypeOfDish()
  fullName: BLL.Services.IRestaurantService.GetAllTypeOfDish()
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetAllTypeOfDish
    name: GetAllTypeOfDish
    nameWithType: IRestaurantService.GetAllTypeOfDish
    fullName: BLL.Services.IRestaurantService.GetAllTypeOfDish
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetAllTypeOfDish
    name: GetAllTypeOfDish
    nameWithType: IRestaurantService.GetAllTypeOfDish
    fullName: BLL.Services.IRestaurantService.GetAllTypeOfDish
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.TypeOfDish}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.TypeOfDish}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<TypeOfDish>>
  nameWithType: Task<List<TypeOfDish>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<BO.Entity.TypeOfDish>>
  nameWithType.vb: Task(Of List(Of TypeOfDish))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of BO.Entity.TypeOfDish))
  name.vb: Task(Of List(Of TypeOfDish))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.TypeOfDish
    name: TypeOfDish
    nameWithType: TypeOfDish
    fullName: BO.Entity.TypeOfDish
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.TypeOfDish
    name: TypeOfDish
    nameWithType: TypeOfDish
    fullName: BO.Entity.TypeOfDish
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetTypeOfDishById*
  commentId: Overload:BLL.Services.RestaurantService.GetTypeOfDishById
  name: GetTypeOfDishById
  nameWithType: RestaurantService.GetTypeOfDishById
  fullName: BLL.Services.RestaurantService.GetTypeOfDishById
- uid: BLL.Services.IRestaurantService.GetTypeOfDishById(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.GetTypeOfDishById(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: GetTypeOfDishById(Int32)
  nameWithType: IRestaurantService.GetTypeOfDishById(Int32)
  fullName: BLL.Services.IRestaurantService.GetTypeOfDishById(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetTypeOfDishById(System.Int32)
    name: GetTypeOfDishById
    nameWithType: IRestaurantService.GetTypeOfDishById
    fullName: BLL.Services.IRestaurantService.GetTypeOfDishById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetTypeOfDishById(System.Int32)
    name: GetTypeOfDishById
    nameWithType: IRestaurantService.GetTypeOfDishById
    fullName: BLL.Services.IRestaurantService.GetTypeOfDishById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{BO.Entity.TypeOfDish}
  commentId: T:System.Threading.Tasks.Task{BO.Entity.TypeOfDish}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TypeOfDish>
  nameWithType: Task<TypeOfDish>
  fullName: System.Threading.Tasks.Task<BO.Entity.TypeOfDish>
  nameWithType.vb: Task(Of TypeOfDish)
  fullName.vb: System.Threading.Tasks.Task(Of BO.Entity.TypeOfDish)
  name.vb: Task(Of TypeOfDish)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.TypeOfDish
    name: TypeOfDish
    nameWithType: TypeOfDish
    fullName: BO.Entity.TypeOfDish
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.TypeOfDish
    name: TypeOfDish
    nameWithType: TypeOfDish
    fullName: BO.Entity.TypeOfDish
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetAllService*
  commentId: Overload:BLL.Services.RestaurantService.GetAllService
  name: GetAllService
  nameWithType: RestaurantService.GetAllService
  fullName: BLL.Services.RestaurantService.GetAllService
- uid: BLL.Services.IRestaurantService.GetAllService
  commentId: M:BLL.Services.IRestaurantService.GetAllService
  parent: BLL.Services.IRestaurantService
  name: GetAllService()
  nameWithType: IRestaurantService.GetAllService()
  fullName: BLL.Services.IRestaurantService.GetAllService()
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetAllService
    name: GetAllService
    nameWithType: IRestaurantService.GetAllService
    fullName: BLL.Services.IRestaurantService.GetAllService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetAllService
    name: GetAllService
    nameWithType: IRestaurantService.GetAllService
    fullName: BLL.Services.IRestaurantService.GetAllService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Service}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Service}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Service>>
  nameWithType: Task<List<Service>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<BO.Entity.Service>>
  nameWithType.vb: Task(Of List(Of Service))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of BO.Entity.Service))
  name.vb: Task(Of List(Of Service))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.Service
    name: Service
    nameWithType: Service
    fullName: BO.Entity.Service
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.Service
    name: Service
    nameWithType: Service
    fullName: BO.Entity.Service
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetServiceById*
  commentId: Overload:BLL.Services.RestaurantService.GetServiceById
  name: GetServiceById
  nameWithType: RestaurantService.GetServiceById
  fullName: BLL.Services.RestaurantService.GetServiceById
- uid: BLL.Services.IRestaurantService.GetServiceById(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.GetServiceById(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: GetServiceById(Int32)
  nameWithType: IRestaurantService.GetServiceById(Int32)
  fullName: BLL.Services.IRestaurantService.GetServiceById(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetServiceById(System.Int32)
    name: GetServiceById
    nameWithType: IRestaurantService.GetServiceById
    fullName: BLL.Services.IRestaurantService.GetServiceById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetServiceById(System.Int32)
    name: GetServiceById
    nameWithType: IRestaurantService.GetServiceById
    fullName: BLL.Services.IRestaurantService.GetServiceById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{BO.Entity.Service}
  commentId: T:System.Threading.Tasks.Task{BO.Entity.Service}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Service>
  nameWithType: Task<Service>
  fullName: System.Threading.Tasks.Task<BO.Entity.Service>
  nameWithType.vb: Task(Of Service)
  fullName.vb: System.Threading.Tasks.Task(Of BO.Entity.Service)
  name.vb: Task(Of Service)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.Service
    name: Service
    nameWithType: Service
    fullName: BO.Entity.Service
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.Service
    name: Service
    nameWithType: Service
    fullName: BO.Entity.Service
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetServicesByIdMenu*
  commentId: Overload:BLL.Services.RestaurantService.GetServicesByIdMenu
  name: GetServicesByIdMenu
  nameWithType: RestaurantService.GetServicesByIdMenu
  fullName: BLL.Services.RestaurantService.GetServicesByIdMenu
- uid: BLL.Services.IRestaurantService.GetServicesByIdMenu(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.GetServicesByIdMenu(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: GetServicesByIdMenu(Int32)
  nameWithType: IRestaurantService.GetServicesByIdMenu(Int32)
  fullName: BLL.Services.IRestaurantService.GetServicesByIdMenu(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetServicesByIdMenu(System.Int32)
    name: GetServicesByIdMenu
    nameWithType: IRestaurantService.GetServicesByIdMenu
    fullName: BLL.Services.IRestaurantService.GetServicesByIdMenu
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetServicesByIdMenu(System.Int32)
    name: GetServicesByIdMenu
    nameWithType: IRestaurantService.GetServicesByIdMenu
    fullName: BLL.Services.IRestaurantService.GetServicesByIdMenu
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.CreateService*
  commentId: Overload:BLL.Services.RestaurantService.CreateService
  name: CreateService
  nameWithType: RestaurantService.CreateService
  fullName: BLL.Services.RestaurantService.CreateService
- uid: BLL.Services.IRestaurantService.CreateService(BO.Entity.Service)
  commentId: M:BLL.Services.IRestaurantService.CreateService(BO.Entity.Service)
  parent: BLL.Services.IRestaurantService
  name: CreateService(Service)
  nameWithType: IRestaurantService.CreateService(Service)
  fullName: BLL.Services.IRestaurantService.CreateService(BO.Entity.Service)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.CreateService(BO.Entity.Service)
    name: CreateService
    nameWithType: IRestaurantService.CreateService
    fullName: BLL.Services.IRestaurantService.CreateService
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Service
    name: Service
    nameWithType: Service
    fullName: BO.Entity.Service
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.CreateService(BO.Entity.Service)
    name: CreateService
    nameWithType: IRestaurantService.CreateService
    fullName: BLL.Services.IRestaurantService.CreateService
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Service
    name: Service
    nameWithType: Service
    fullName: BO.Entity.Service
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.Service
  commentId: T:BO.Entity.Service
  parent: BO.Entity
  name: Service
  nameWithType: Service
  fullName: BO.Entity.Service
- uid: BLL.Services.RestaurantService.AddDishForThisService*
  commentId: Overload:BLL.Services.RestaurantService.AddDishForThisService
  name: AddDishForThisService
  nameWithType: RestaurantService.AddDishForThisService
  fullName: BLL.Services.RestaurantService.AddDishForThisService
- uid: BLL.Services.IRestaurantService.AddDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  commentId: M:BLL.Services.IRestaurantService.AddDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  parent: BLL.Services.IRestaurantService
  name: AddDishForThisService(Dish, Service)
  nameWithType: IRestaurantService.AddDishForThisService(Dish, Service)
  fullName: BLL.Services.IRestaurantService.AddDishForThisService(BO.Entity.Dish, BO.Entity.Service)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.AddDishForThisService(BO.Entity.Dish,BO.Entity.Service)
    name: AddDishForThisService
    nameWithType: IRestaurantService.AddDishForThisService
    fullName: BLL.Services.IRestaurantService.AddDishForThisService
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BO.Entity.Service
    name: Service
    nameWithType: Service
    fullName: BO.Entity.Service
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.AddDishForThisService(BO.Entity.Dish,BO.Entity.Service)
    name: AddDishForThisService
    nameWithType: IRestaurantService.AddDishForThisService
    fullName: BLL.Services.IRestaurantService.AddDishForThisService
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BO.Entity.Service
    name: Service
    nameWithType: Service
    fullName: BO.Entity.Service
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.RemoveDishForThisService*
  commentId: Overload:BLL.Services.RestaurantService.RemoveDishForThisService
  name: RemoveDishForThisService
  nameWithType: RestaurantService.RemoveDishForThisService
  fullName: BLL.Services.RestaurantService.RemoveDishForThisService
- uid: BLL.Services.IRestaurantService.RemoveDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  commentId: M:BLL.Services.IRestaurantService.RemoveDishForThisService(BO.Entity.Dish,BO.Entity.Service)
  parent: BLL.Services.IRestaurantService
  name: RemoveDishForThisService(Dish, Service)
  nameWithType: IRestaurantService.RemoveDishForThisService(Dish, Service)
  fullName: BLL.Services.IRestaurantService.RemoveDishForThisService(BO.Entity.Dish, BO.Entity.Service)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.RemoveDishForThisService(BO.Entity.Dish,BO.Entity.Service)
    name: RemoveDishForThisService
    nameWithType: IRestaurantService.RemoveDishForThisService
    fullName: BLL.Services.IRestaurantService.RemoveDishForThisService
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BO.Entity.Service
    name: Service
    nameWithType: Service
    fullName: BO.Entity.Service
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.RemoveDishForThisService(BO.Entity.Dish,BO.Entity.Service)
    name: RemoveDishForThisService
    nameWithType: IRestaurantService.RemoveDishForThisService
    fullName: BLL.Services.IRestaurantService.RemoveDishForThisService
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Dish
    name: Dish
    nameWithType: Dish
    fullName: BO.Entity.Dish
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BO.Entity.Service
    name: Service
    nameWithType: Service
    fullName: BO.Entity.Service
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetAllMenu*
  commentId: Overload:BLL.Services.RestaurantService.GetAllMenu
  name: GetAllMenu
  nameWithType: RestaurantService.GetAllMenu
  fullName: BLL.Services.RestaurantService.GetAllMenu
- uid: BLL.Services.IRestaurantService.GetAllMenu
  commentId: M:BLL.Services.IRestaurantService.GetAllMenu
  parent: BLL.Services.IRestaurantService
  name: GetAllMenu()
  nameWithType: IRestaurantService.GetAllMenu()
  fullName: BLL.Services.IRestaurantService.GetAllMenu()
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetAllMenu
    name: GetAllMenu
    nameWithType: IRestaurantService.GetAllMenu
    fullName: BLL.Services.IRestaurantService.GetAllMenu
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetAllMenu
    name: GetAllMenu
    nameWithType: IRestaurantService.GetAllMenu
    fullName: BLL.Services.IRestaurantService.GetAllMenu
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Menu}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.Menu}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Menu>>
  nameWithType: Task<List<Menu>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<BO.Entity.Menu>>
  nameWithType.vb: Task(Of List(Of Menu))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of BO.Entity.Menu))
  name.vb: Task(Of List(Of Menu))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.Menu
    name: Menu
    nameWithType: Menu
    fullName: BO.Entity.Menu
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.Menu
    name: Menu
    nameWithType: Menu
    fullName: BO.Entity.Menu
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetMenuById*
  commentId: Overload:BLL.Services.RestaurantService.GetMenuById
  name: GetMenuById
  nameWithType: RestaurantService.GetMenuById
  fullName: BLL.Services.RestaurantService.GetMenuById
- uid: BLL.Services.IRestaurantService.GetMenuById(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.GetMenuById(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: GetMenuById(Int32)
  nameWithType: IRestaurantService.GetMenuById(Int32)
  fullName: BLL.Services.IRestaurantService.GetMenuById(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetMenuById(System.Int32)
    name: GetMenuById
    nameWithType: IRestaurantService.GetMenuById
    fullName: BLL.Services.IRestaurantService.GetMenuById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetMenuById(System.Int32)
    name: GetMenuById
    nameWithType: IRestaurantService.GetMenuById
    fullName: BLL.Services.IRestaurantService.GetMenuById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{BO.Entity.Menu}
  commentId: T:System.Threading.Tasks.Task{BO.Entity.Menu}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Menu>
  nameWithType: Task<Menu>
  fullName: System.Threading.Tasks.Task<BO.Entity.Menu>
  nameWithType.vb: Task(Of Menu)
  fullName.vb: System.Threading.Tasks.Task(Of BO.Entity.Menu)
  name.vb: Task(Of Menu)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.Menu
    name: Menu
    nameWithType: Menu
    fullName: BO.Entity.Menu
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.Menu
    name: Menu
    nameWithType: Menu
    fullName: BO.Entity.Menu
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.NextMenu*
  commentId: Overload:BLL.Services.RestaurantService.NextMenu
  name: NextMenu
  nameWithType: RestaurantService.NextMenu
  fullName: BLL.Services.RestaurantService.NextMenu
- uid: BLL.Services.IRestaurantService.NextMenu(System.DateTime)
  commentId: M:BLL.Services.IRestaurantService.NextMenu(System.DateTime)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: NextMenu(DateTime)
  nameWithType: IRestaurantService.NextMenu(DateTime)
  fullName: BLL.Services.IRestaurantService.NextMenu(System.DateTime)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.NextMenu(System.DateTime)
    name: NextMenu
    nameWithType: IRestaurantService.NextMenu
    fullName: BLL.Services.IRestaurantService.NextMenu
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.NextMenu(System.DateTime)
    name: NextMenu
    nameWithType: IRestaurantService.NextMenu
    fullName: BLL.Services.IRestaurantService.NextMenu
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Threading.Tasks.Task{System.DateTime}
  commentId: T:System.Threading.Tasks.Task{System.DateTime}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DateTime>
  nameWithType: Task<DateTime>
  fullName: System.Threading.Tasks.Task<System.DateTime>
  nameWithType.vb: Task(Of DateTime)
  fullName.vb: System.Threading.Tasks.Task(Of System.DateTime)
  name.vb: Task(Of DateTime)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.PreviousMenu*
  commentId: Overload:BLL.Services.RestaurantService.PreviousMenu
  name: PreviousMenu
  nameWithType: RestaurantService.PreviousMenu
  fullName: BLL.Services.RestaurantService.PreviousMenu
- uid: BLL.Services.IRestaurantService.PreviousMenu(System.DateTime)
  commentId: M:BLL.Services.IRestaurantService.PreviousMenu(System.DateTime)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: PreviousMenu(DateTime)
  nameWithType: IRestaurantService.PreviousMenu(DateTime)
  fullName: BLL.Services.IRestaurantService.PreviousMenu(System.DateTime)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.PreviousMenu(System.DateTime)
    name: PreviousMenu
    nameWithType: IRestaurantService.PreviousMenu
    fullName: BLL.Services.IRestaurantService.PreviousMenu
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.PreviousMenu(System.DateTime)
    name: PreviousMenu
    nameWithType: IRestaurantService.PreviousMenu
    fullName: BLL.Services.IRestaurantService.PreviousMenu
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetIdMenuByDate*
  commentId: Overload:BLL.Services.RestaurantService.GetIdMenuByDate
  name: GetIdMenuByDate
  nameWithType: RestaurantService.GetIdMenuByDate
  fullName: BLL.Services.RestaurantService.GetIdMenuByDate
- uid: BLL.Services.IRestaurantService.GetIdMenuByDate(System.DateTime)
  commentId: M:BLL.Services.IRestaurantService.GetIdMenuByDate(System.DateTime)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: GetIdMenuByDate(DateTime)
  nameWithType: IRestaurantService.GetIdMenuByDate(DateTime)
  fullName: BLL.Services.IRestaurantService.GetIdMenuByDate(System.DateTime)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetIdMenuByDate(System.DateTime)
    name: GetIdMenuByDate
    nameWithType: IRestaurantService.GetIdMenuByDate
    fullName: BLL.Services.IRestaurantService.GetIdMenuByDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetIdMenuByDate(System.DateTime)
    name: GetIdMenuByDate
    nameWithType: IRestaurantService.GetIdMenuByDate
    fullName: BLL.Services.IRestaurantService.GetIdMenuByDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetServicesOfMenuById*
  commentId: Overload:BLL.Services.RestaurantService.GetServicesOfMenuById
  name: GetServicesOfMenuById
  nameWithType: RestaurantService.GetServicesOfMenuById
  fullName: BLL.Services.RestaurantService.GetServicesOfMenuById
- uid: BLL.Services.IRestaurantService.GetServicesOfMenuById(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.GetServicesOfMenuById(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: GetServicesOfMenuById(Int32)
  nameWithType: IRestaurantService.GetServicesOfMenuById(Int32)
  fullName: BLL.Services.IRestaurantService.GetServicesOfMenuById(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetServicesOfMenuById(System.Int32)
    name: GetServicesOfMenuById
    nameWithType: IRestaurantService.GetServicesOfMenuById
    fullName: BLL.Services.IRestaurantService.GetServicesOfMenuById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetServicesOfMenuById(System.Int32)
    name: GetServicesOfMenuById
    nameWithType: IRestaurantService.GetServicesOfMenuById
    fullName: BLL.Services.IRestaurantService.GetServicesOfMenuById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.CreateMenu*
  commentId: Overload:BLL.Services.RestaurantService.CreateMenu
  name: CreateMenu
  nameWithType: RestaurantService.CreateMenu
  fullName: BLL.Services.RestaurantService.CreateMenu
- uid: BLL.Services.IRestaurantService.CreateMenu(BO.Entity.Menu)
  commentId: M:BLL.Services.IRestaurantService.CreateMenu(BO.Entity.Menu)
  parent: BLL.Services.IRestaurantService
  name: CreateMenu(Menu)
  nameWithType: IRestaurantService.CreateMenu(Menu)
  fullName: BLL.Services.IRestaurantService.CreateMenu(BO.Entity.Menu)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.CreateMenu(BO.Entity.Menu)
    name: CreateMenu
    nameWithType: IRestaurantService.CreateMenu
    fullName: BLL.Services.IRestaurantService.CreateMenu
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Menu
    name: Menu
    nameWithType: Menu
    fullName: BO.Entity.Menu
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.CreateMenu(BO.Entity.Menu)
    name: CreateMenu
    nameWithType: IRestaurantService.CreateMenu
    fullName: BLL.Services.IRestaurantService.CreateMenu
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.Menu
    name: Menu
    nameWithType: Menu
    fullName: BO.Entity.Menu
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.Menu
  commentId: T:BO.Entity.Menu
  parent: BO.Entity
  name: Menu
  nameWithType: Menu
  fullName: BO.Entity.Menu
- uid: BLL.Services.RestaurantService.GetAllListOfIngredient*
  commentId: Overload:BLL.Services.RestaurantService.GetAllListOfIngredient
  name: GetAllListOfIngredient
  nameWithType: RestaurantService.GetAllListOfIngredient
  fullName: BLL.Services.RestaurantService.GetAllListOfIngredient
- uid: BLL.Services.IRestaurantService.GetAllListOfIngredient
  commentId: M:BLL.Services.IRestaurantService.GetAllListOfIngredient
  parent: BLL.Services.IRestaurantService
  name: GetAllListOfIngredient()
  nameWithType: IRestaurantService.GetAllListOfIngredient()
  fullName: BLL.Services.IRestaurantService.GetAllListOfIngredient()
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetAllListOfIngredient
    name: GetAllListOfIngredient
    nameWithType: IRestaurantService.GetAllListOfIngredient
    fullName: BLL.Services.IRestaurantService.GetAllListOfIngredient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetAllListOfIngredient
    name: GetAllListOfIngredient
    nameWithType: IRestaurantService.GetAllListOfIngredient
    fullName: BLL.Services.IRestaurantService.GetAllListOfIngredient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.ListOfIngredient}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{BO.Entity.ListOfIngredient}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<ListOfIngredient>>
  nameWithType: Task<List<ListOfIngredient>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<BO.Entity.ListOfIngredient>>
  nameWithType.vb: Task(Of List(Of ListOfIngredient))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of BO.Entity.ListOfIngredient))
  name.vb: Task(Of List(Of ListOfIngredient))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.ListOfIngredient
    name: ListOfIngredient
    nameWithType: ListOfIngredient
    fullName: BO.Entity.ListOfIngredient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.ListOfIngredient
    name: ListOfIngredient
    nameWithType: ListOfIngredient
    fullName: BO.Entity.ListOfIngredient
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.GetListOfIngredientByIdDish*
  commentId: Overload:BLL.Services.RestaurantService.GetListOfIngredientByIdDish
  name: GetListOfIngredientByIdDish
  nameWithType: RestaurantService.GetListOfIngredientByIdDish
  fullName: BLL.Services.RestaurantService.GetListOfIngredientByIdDish
- uid: BLL.Services.IRestaurantService.GetListOfIngredientByIdDish(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.GetListOfIngredientByIdDish(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: GetListOfIngredientByIdDish(Int32)
  nameWithType: IRestaurantService.GetListOfIngredientByIdDish(Int32)
  fullName: BLL.Services.IRestaurantService.GetListOfIngredientByIdDish(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.GetListOfIngredientByIdDish(System.Int32)
    name: GetListOfIngredientByIdDish
    nameWithType: IRestaurantService.GetListOfIngredientByIdDish
    fullName: BLL.Services.IRestaurantService.GetListOfIngredientByIdDish
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.GetListOfIngredientByIdDish(System.Int32)
    name: GetListOfIngredientByIdDish
    nameWithType: IRestaurantService.GetListOfIngredientByIdDish
    fullName: BLL.Services.IRestaurantService.GetListOfIngredientByIdDish
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.CreateListOfIngredient*
  commentId: Overload:BLL.Services.RestaurantService.CreateListOfIngredient
  name: CreateListOfIngredient
  nameWithType: RestaurantService.CreateListOfIngredient
  fullName: BLL.Services.RestaurantService.CreateListOfIngredient
- uid: BLL.Services.IRestaurantService.CreateListOfIngredient(BO.Entity.ListOfIngredient)
  commentId: M:BLL.Services.IRestaurantService.CreateListOfIngredient(BO.Entity.ListOfIngredient)
  parent: BLL.Services.IRestaurantService
  name: CreateListOfIngredient(ListOfIngredient)
  nameWithType: IRestaurantService.CreateListOfIngredient(ListOfIngredient)
  fullName: BLL.Services.IRestaurantService.CreateListOfIngredient(BO.Entity.ListOfIngredient)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.CreateListOfIngredient(BO.Entity.ListOfIngredient)
    name: CreateListOfIngredient
    nameWithType: IRestaurantService.CreateListOfIngredient
    fullName: BLL.Services.IRestaurantService.CreateListOfIngredient
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.ListOfIngredient
    name: ListOfIngredient
    nameWithType: ListOfIngredient
    fullName: BO.Entity.ListOfIngredient
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.CreateListOfIngredient(BO.Entity.ListOfIngredient)
    name: CreateListOfIngredient
    nameWithType: IRestaurantService.CreateListOfIngredient
    fullName: BLL.Services.IRestaurantService.CreateListOfIngredient
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.ListOfIngredient
    name: ListOfIngredient
    nameWithType: ListOfIngredient
    fullName: BO.Entity.ListOfIngredient
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.ListOfIngredient
  commentId: T:BO.Entity.ListOfIngredient
  parent: BO.Entity
  name: ListOfIngredient
  nameWithType: ListOfIngredient
  fullName: BO.Entity.ListOfIngredient
- uid: System.Threading.Tasks.Task{BO.Entity.ListOfIngredient}
  commentId: T:System.Threading.Tasks.Task{BO.Entity.ListOfIngredient}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListOfIngredient>
  nameWithType: Task<ListOfIngredient>
  fullName: System.Threading.Tasks.Task<BO.Entity.ListOfIngredient>
  nameWithType.vb: Task(Of ListOfIngredient)
  fullName.vb: System.Threading.Tasks.Task(Of BO.Entity.ListOfIngredient)
  name.vb: Task(Of ListOfIngredient)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.ListOfIngredient
    name: ListOfIngredient
    nameWithType: ListOfIngredient
    fullName: BO.Entity.ListOfIngredient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.ListOfIngredient
    name: ListOfIngredient
    nameWithType: ListOfIngredient
    fullName: BO.Entity.ListOfIngredient
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.ModifyListOfIngredient*
  commentId: Overload:BLL.Services.RestaurantService.ModifyListOfIngredient
  name: ModifyListOfIngredient
  nameWithType: RestaurantService.ModifyListOfIngredient
  fullName: BLL.Services.RestaurantService.ModifyListOfIngredient
- uid: BLL.Services.IRestaurantService.ModifyListOfIngredient(BO.Entity.ListOfIngredient)
  commentId: M:BLL.Services.IRestaurantService.ModifyListOfIngredient(BO.Entity.ListOfIngredient)
  parent: BLL.Services.IRestaurantService
  name: ModifyListOfIngredient(ListOfIngredient)
  nameWithType: IRestaurantService.ModifyListOfIngredient(ListOfIngredient)
  fullName: BLL.Services.IRestaurantService.ModifyListOfIngredient(BO.Entity.ListOfIngredient)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.ModifyListOfIngredient(BO.Entity.ListOfIngredient)
    name: ModifyListOfIngredient
    nameWithType: IRestaurantService.ModifyListOfIngredient
    fullName: BLL.Services.IRestaurantService.ModifyListOfIngredient
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.ListOfIngredient
    name: ListOfIngredient
    nameWithType: ListOfIngredient
    fullName: BO.Entity.ListOfIngredient
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.ModifyListOfIngredient(BO.Entity.ListOfIngredient)
    name: ModifyListOfIngredient
    nameWithType: IRestaurantService.ModifyListOfIngredient
    fullName: BLL.Services.IRestaurantService.ModifyListOfIngredient
  - name: (
    nameWithType: (
    fullName: (
  - uid: BO.Entity.ListOfIngredient
    name: ListOfIngredient
    nameWithType: ListOfIngredient
    fullName: BO.Entity.ListOfIngredient
  - name: )
    nameWithType: )
    fullName: )
- uid: BLL.Services.RestaurantService.RemoveListOfIngredientById*
  commentId: Overload:BLL.Services.RestaurantService.RemoveListOfIngredientById
  name: RemoveListOfIngredientById
  nameWithType: RestaurantService.RemoveListOfIngredientById
  fullName: BLL.Services.RestaurantService.RemoveListOfIngredientById
- uid: BLL.Services.IRestaurantService.RemoveListOfIngredientById(System.Int32)
  commentId: M:BLL.Services.IRestaurantService.RemoveListOfIngredientById(System.Int32)
  parent: BLL.Services.IRestaurantService
  isExternal: true
  name: RemoveListOfIngredientById(Int32)
  nameWithType: IRestaurantService.RemoveListOfIngredientById(Int32)
  fullName: BLL.Services.IRestaurantService.RemoveListOfIngredientById(System.Int32)
  spec.csharp:
  - uid: BLL.Services.IRestaurantService.RemoveListOfIngredientById(System.Int32)
    name: RemoveListOfIngredientById
    nameWithType: IRestaurantService.RemoveListOfIngredientById
    fullName: BLL.Services.IRestaurantService.RemoveListOfIngredientById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BLL.Services.IRestaurantService.RemoveListOfIngredientById(System.Int32)
    name: RemoveListOfIngredientById
    nameWithType: IRestaurantService.RemoveListOfIngredientById
    fullName: BLL.Services.IRestaurantService.RemoveListOfIngredientById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
