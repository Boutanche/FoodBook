### YamlMime:ManagedReference
items:
- uid: BO.Entity.ListOfIngredient
  commentId: T:BO.Entity.ListOfIngredient
  id: ListOfIngredient
  parent: BO.Entity
  children:
  - BO.Entity.ListOfIngredient.#ctor
  - BO.Entity.ListOfIngredient.#ctor(System.Nullable{System.Int32},System.Int32,System.Int32)
  - BO.Entity.ListOfIngredient.Equals(System.Object)
  - BO.Entity.ListOfIngredient.GetHashCode
  - BO.Entity.ListOfIngredient.IdDish
  - BO.Entity.ListOfIngredient.IdIngredient
  - BO.Entity.ListOfIngredient.Quantity
  langs:
  - csharp
  - vb
  name: ListOfIngredient
  nameWithType: ListOfIngredient
  fullName: BO.Entity.ListOfIngredient
  type: Class
  source:
    remote:
      path: FoodBook/BO/Entity/ListOfIngredient.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: ListOfIngredient
    path: E:/Fbook/FoodBook/BO/Entity/ListOfIngredient.cs
    startLine: 8
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nEntitée qui permet de faire la liaison entre l&apos;ingrédient et l&apos;un des plats dans lequel il est utilisé.\nInforme aussi sur la quantité nécéssaire de commander pour un plat.\n"
  example: []
  syntax:
    content: public class ListOfIngredient
    content.vb: Public Class ListOfIngredient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BO.Entity.ListOfIngredient.IdIngredient
  commentId: P:BO.Entity.ListOfIngredient.IdIngredient
  id: IdIngredient
  parent: BO.Entity.ListOfIngredient
  langs:
  - csharp
  - vb
  name: IdIngredient
  nameWithType: ListOfIngredient.IdIngredient
  fullName: BO.Entity.ListOfIngredient.IdIngredient
  type: Property
  source:
    remote:
      path: FoodBook/BO/Entity/ListOfIngredient.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: IdIngredient
    path: E:/Fbook/FoodBook/BO/Entity/ListOfIngredient.cs
    startLine: 13
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nId de l&apos;ingrédient\n"
  example: []
  syntax:
    content: public int? IdIngredient { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property IdIngredient As Integer?
  overload: BO.Entity.ListOfIngredient.IdIngredient*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.Entity.ListOfIngredient.IdDish
  commentId: P:BO.Entity.ListOfIngredient.IdDish
  id: IdDish
  parent: BO.Entity.ListOfIngredient
  langs:
  - csharp
  - vb
  name: IdDish
  nameWithType: ListOfIngredient.IdDish
  fullName: BO.Entity.ListOfIngredient.IdDish
  type: Property
  source:
    remote:
      path: FoodBook/BO/Entity/ListOfIngredient.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: IdDish
    path: E:/Fbook/FoodBook/BO/Entity/ListOfIngredient.cs
    startLine: 17
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nId du plat\n"
  example: []
  syntax:
    content: public int? IdDish { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property IdDish As Integer?
  overload: BO.Entity.ListOfIngredient.IdDish*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.Entity.ListOfIngredient.Quantity
  commentId: P:BO.Entity.ListOfIngredient.Quantity
  id: Quantity
  parent: BO.Entity.ListOfIngredient
  langs:
  - csharp
  - vb
  name: Quantity
  nameWithType: ListOfIngredient.Quantity
  fullName: BO.Entity.ListOfIngredient.Quantity
  type: Property
  source:
    remote:
      path: FoodBook/BO/Entity/ListOfIngredient.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: Quantity
    path: E:/Fbook/FoodBook/BO/Entity/ListOfIngredient.cs
    startLine: 21
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nQuantité nécessaire de cet ingrédient dans un de ce plat.\n"
  example: []
  syntax:
    content: public int Quantity { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Quantity As Integer
  overload: BO.Entity.ListOfIngredient.Quantity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.Entity.ListOfIngredient.#ctor
  commentId: M:BO.Entity.ListOfIngredient.#ctor
  id: '#ctor'
  parent: BO.Entity.ListOfIngredient
  langs:
  - csharp
  - vb
  name: ListOfIngredient()
  nameWithType: ListOfIngredient.ListOfIngredient()
  fullName: BO.Entity.ListOfIngredient.ListOfIngredient()
  type: Constructor
  source:
    remote:
      path: FoodBook/BO/Entity/ListOfIngredient.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: .ctor
    path: E:/Fbook/FoodBook/BO/Entity/ListOfIngredient.cs
    startLine: 25
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nConstructeur par défault pour la sérialisation de l&apos;API\n"
  example: []
  syntax:
    content: public ListOfIngredient()
    content.vb: Public Sub New
  overload: BO.Entity.ListOfIngredient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BO.Entity.ListOfIngredient.#ctor(System.Nullable{System.Int32},System.Int32,System.Int32)
  commentId: M:BO.Entity.ListOfIngredient.#ctor(System.Nullable{System.Int32},System.Int32,System.Int32)
  id: '#ctor(System.Nullable{System.Int32},System.Int32,System.Int32)'
  parent: BO.Entity.ListOfIngredient
  langs:
  - csharp
  - vb
  name: ListOfIngredient(Nullable<Int32>, Int32, Int32)
  nameWithType: ListOfIngredient.ListOfIngredient(Nullable<Int32>, Int32, Int32)
  fullName: BO.Entity.ListOfIngredient.ListOfIngredient(System.Nullable<System.Int32>, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: FoodBook/BO/Entity/ListOfIngredient.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: .ctor
    path: E:/Fbook/FoodBook/BO/Entity/ListOfIngredient.cs
    startLine: 32
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nConstructeur utilitaire avec l&apos;ensemble des propriétés\n"
  example: []
  syntax:
    content: public ListOfIngredient(int? id_ingredient, int id_dish, int quantity)
    parameters:
    - id: id_ingredient
      type: System.Nullable{System.Int32}
      description: L&apos;id de l&apos;ingrédient
    - id: id_dish
      type: System.Int32
      description: L&apos;id du plat auquel il est nécessaire
    - id: quantity
      type: System.Int32
      description: Quantité nécéssaire de cet ingrédient pour ce plat
    content.vb: Public Sub New(id_ingredient As Integer?, id_dish As Integer, quantity As Integer)
  overload: BO.Entity.ListOfIngredient.#ctor*
  nameWithType.vb: ListOfIngredient.ListOfIngredient(Nullable(Of Int32), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BO.Entity.ListOfIngredient.ListOfIngredient(System.Nullable(Of System.Int32), System.Int32, System.Int32)
  name.vb: ListOfIngredient(Nullable(Of Int32), Int32, Int32)
- uid: BO.Entity.ListOfIngredient.Equals(System.Object)
  commentId: M:BO.Entity.ListOfIngredient.Equals(System.Object)
  id: Equals(System.Object)
  parent: BO.Entity.ListOfIngredient
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ListOfIngredient.Equals(Object)
  fullName: BO.Entity.ListOfIngredient.Equals(System.Object)
  type: Method
  source:
    remote:
      path: FoodBook/BO/Entity/ListOfIngredient.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: Equals
    path: E:/Fbook/FoodBook/BO/Entity/ListOfIngredient.cs
    startLine: 43
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nOverride Equals Methode for ListOfIngredient\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: BO.Entity.ListOfIngredient.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BO.Entity.ListOfIngredient.GetHashCode
  commentId: M:BO.Entity.ListOfIngredient.GetHashCode
  id: GetHashCode
  parent: BO.Entity.ListOfIngredient
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ListOfIngredient.GetHashCode()
  fullName: BO.Entity.ListOfIngredient.GetHashCode()
  type: Method
  source:
    remote:
      path: FoodBook/BO/Entity/ListOfIngredient.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetHashCode
    path: E:/Fbook/FoodBook/BO/Entity/ListOfIngredient.cs
    startLine: 54
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nOverride GetHashCode for ListOfIngredient\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: BO.Entity.ListOfIngredient.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BO.Entity
  commentId: N:BO.Entity
  name: BO.Entity
  nameWithType: BO.Entity
  fullName: BO.Entity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BO.Entity.ListOfIngredient.IdIngredient*
  commentId: Overload:BO.Entity.ListOfIngredient.IdIngredient
  name: IdIngredient
  nameWithType: ListOfIngredient.IdIngredient
  fullName: BO.Entity.ListOfIngredient.IdIngredient
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.ListOfIngredient.IdDish*
  commentId: Overload:BO.Entity.ListOfIngredient.IdDish
  name: IdDish
  nameWithType: ListOfIngredient.IdDish
  fullName: BO.Entity.ListOfIngredient.IdDish
- uid: BO.Entity.ListOfIngredient.Quantity*
  commentId: Overload:BO.Entity.ListOfIngredient.Quantity
  name: Quantity
  nameWithType: ListOfIngredient.Quantity
  fullName: BO.Entity.ListOfIngredient.Quantity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BO.Entity.ListOfIngredient.#ctor*
  commentId: Overload:BO.Entity.ListOfIngredient.#ctor
  name: ListOfIngredient
  nameWithType: ListOfIngredient.ListOfIngredient
  fullName: BO.Entity.ListOfIngredient.ListOfIngredient
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.ListOfIngredient.Equals*
  commentId: Overload:BO.Entity.ListOfIngredient.Equals
  name: Equals
  nameWithType: ListOfIngredient.Equals
  fullName: BO.Entity.ListOfIngredient.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.ListOfIngredient.GetHashCode*
  commentId: Overload:BO.Entity.ListOfIngredient.GetHashCode
  name: GetHashCode
  nameWithType: ListOfIngredient.GetHashCode
  fullName: BO.Entity.ListOfIngredient.GetHashCode
