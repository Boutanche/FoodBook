### YamlMime:ManagedReference
items:
- uid: BO.Entity.Service
  commentId: T:BO.Entity.Service
  id: Service
  parent: BO.Entity
  children:
  - BO.Entity.Service.#ctor
  - BO.Entity.Service.#ctor(System.Nullable{System.Int32},System.Int32,System.DateTime,System.Collections.Generic.List{System.Int32})
  - BO.Entity.Service.DateService
  - BO.Entity.Service.Equals(System.Object)
  - BO.Entity.Service.GetHashCode
  - BO.Entity.Service.Id
  - BO.Entity.Service.ListOfIntDishes
  - BO.Entity.Service.ServiceNumber
  langs:
  - csharp
  - vb
  name: Service
  nameWithType: Service
  fullName: BO.Entity.Service
  type: Class
  source:
    remote:
      path: FoodBook/BO/Entity/Service.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: Service
    path: E:/Fbook/FoodBook/BO/Entity/Service.cs
    startLine: 10
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nUpdate 15/06/2021\nRemise à zéro des data : avec utilisation de &quot;Date&quot; pour une manipulation plus simple.\nSuppression de\n"
  example: []
  syntax:
    content: public class Service
    content.vb: Public Class Service
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BO.Entity.Service.Id
  commentId: P:BO.Entity.Service.Id
  id: Id
  parent: BO.Entity.Service
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Service.Id
  fullName: BO.Entity.Service.Id
  type: Property
  source:
    remote:
      path: FoodBook/BO/Entity/Service.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: Id
    path: E:/Fbook/FoodBook/BO/Entity/Service.cs
    startLine: 15
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nIdentifiant unique du service\n"
  example: []
  syntax:
    content: public int? Id { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Id As Integer?
  overload: BO.Entity.Service.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.Entity.Service.ServiceNumber
  commentId: P:BO.Entity.Service.ServiceNumber
  id: ServiceNumber
  parent: BO.Entity.Service
  langs:
  - csharp
  - vb
  name: ServiceNumber
  nameWithType: Service.ServiceNumber
  fullName: BO.Entity.Service.ServiceNumber
  type: Property
  source:
    remote:
      path: FoodBook/BO/Entity/Service.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: ServiceNumber
    path: E:/Fbook/FoodBook/BO/Entity/Service.cs
    startLine: 20
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nNuméro de service : \n1 = Midi , 2 = Soir\n"
  example: []
  syntax:
    content: public int ServiceNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ServiceNumber As Integer
  overload: BO.Entity.Service.ServiceNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.Entity.Service.DateService
  commentId: P:BO.Entity.Service.DateService
  id: DateService
  parent: BO.Entity.Service
  langs:
  - csharp
  - vb
  name: DateService
  nameWithType: Service.DateService
  fullName: BO.Entity.Service.DateService
  type: Property
  source:
    remote:
      path: FoodBook/BO/Entity/Service.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: DateService
    path: E:/Fbook/FoodBook/BO/Entity/Service.cs
    startLine: 25
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nNuméro du jour de la semaine,\n1 = Lundi ..., 7 = Dimanche\n"
  example: []
  syntax:
    content: public DateTime DateService { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property DateService As Date
  overload: BO.Entity.Service.DateService*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.Entity.Service.ListOfIntDishes
  commentId: P:BO.Entity.Service.ListOfIntDishes
  id: ListOfIntDishes
  parent: BO.Entity.Service
  langs:
  - csharp
  - vb
  name: ListOfIntDishes
  nameWithType: Service.ListOfIntDishes
  fullName: BO.Entity.Service.ListOfIntDishes
  type: Property
  source:
    remote:
      path: FoodBook/BO/Entity/Service.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: ListOfIntDishes
    path: E:/Fbook/FoodBook/BO/Entity/Service.cs
    startLine: 29
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\n\n"
  example: []
  syntax:
    content: public List<int> ListOfIntDishes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Property ListOfIntDishes As List(Of Integer)
  overload: BO.Entity.Service.ListOfIntDishes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.Entity.Service.#ctor
  commentId: M:BO.Entity.Service.#ctor
  id: '#ctor'
  parent: BO.Entity.Service
  langs:
  - csharp
  - vb
  name: Service()
  nameWithType: Service.Service()
  fullName: BO.Entity.Service.Service()
  type: Constructor
  source:
    remote:
      path: FoodBook/BO/Entity/Service.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: .ctor
    path: E:/Fbook/FoodBook/BO/Entity/Service.cs
    startLine: 33
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\n\n"
  example: []
  syntax:
    content: public Service()
    content.vb: Public Sub New
  overload: BO.Entity.Service.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BO.Entity.Service.#ctor(System.Nullable{System.Int32},System.Int32,System.DateTime,System.Collections.Generic.List{System.Int32})
  commentId: M:BO.Entity.Service.#ctor(System.Nullable{System.Int32},System.Int32,System.DateTime,System.Collections.Generic.List{System.Int32})
  id: '#ctor(System.Nullable{System.Int32},System.Int32,System.DateTime,System.Collections.Generic.List{System.Int32})'
  parent: BO.Entity.Service
  langs:
  - csharp
  - vb
  name: Service(Nullable<Int32>, Int32, DateTime, List<Int32>)
  nameWithType: Service.Service(Nullable<Int32>, Int32, DateTime, List<Int32>)
  fullName: BO.Entity.Service.Service(System.Nullable<System.Int32>, System.Int32, System.DateTime, System.Collections.Generic.List<System.Int32>)
  type: Constructor
  source:
    remote:
      path: FoodBook/BO/Entity/Service.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: .ctor
    path: E:/Fbook/FoodBook/BO/Entity/Service.cs
    startLine: 42
  assemblies:
  - BO
  namespace: BO.Entity
  syntax:
    content: public Service(int? id, int serviceNumber, DateTime dateService, List<int> listOfIntDishes)
    parameters:
    - id: id
      type: System.Nullable{System.Int32}
    - id: serviceNumber
      type: System.Int32
    - id: dateService
      type: System.DateTime
    - id: listOfIntDishes
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Sub New(id As Integer?, serviceNumber As Integer, dateService As Date, listOfIntDishes As List(Of Integer))
  overload: BO.Entity.Service.#ctor*
  nameWithType.vb: Service.Service(Nullable(Of Int32), Int32, DateTime, List(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BO.Entity.Service.Service(System.Nullable(Of System.Int32), System.Int32, System.DateTime, System.Collections.Generic.List(Of System.Int32))
  name.vb: Service(Nullable(Of Int32), Int32, DateTime, List(Of Int32))
- uid: BO.Entity.Service.Equals(System.Object)
  commentId: M:BO.Entity.Service.Equals(System.Object)
  id: Equals(System.Object)
  parent: BO.Entity.Service
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Service.Equals(Object)
  fullName: BO.Entity.Service.Equals(System.Object)
  type: Method
  source:
    remote:
      path: FoodBook/BO/Entity/Service.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: Equals
    path: E:/Fbook/FoodBook/BO/Entity/Service.cs
    startLine: 54
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\n\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: BO.Entity.Service.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BO.Entity.Service.GetHashCode
  commentId: M:BO.Entity.Service.GetHashCode
  id: GetHashCode
  parent: BO.Entity.Service
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Service.GetHashCode()
  fullName: BO.Entity.Service.GetHashCode()
  type: Method
  source:
    remote:
      path: FoodBook/BO/Entity/Service.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetHashCode
    path: E:/Fbook/FoodBook/BO/Entity/Service.cs
    startLine: 65
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\n\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: BO.Entity.Service.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BO.Entity
  commentId: N:BO.Entity
  name: BO.Entity
  nameWithType: BO.Entity
  fullName: BO.Entity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BO.Entity.Service.Id*
  commentId: Overload:BO.Entity.Service.Id
  name: Id
  nameWithType: Service.Id
  fullName: BO.Entity.Service.Id
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.Service.ServiceNumber*
  commentId: Overload:BO.Entity.Service.ServiceNumber
  name: ServiceNumber
  nameWithType: Service.ServiceNumber
  fullName: BO.Entity.Service.ServiceNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BO.Entity.Service.DateService*
  commentId: Overload:BO.Entity.Service.DateService
  name: DateService
  nameWithType: Service.DateService
  fullName: BO.Entity.Service.DateService
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: BO.Entity.Service.ListOfIntDishes*
  commentId: Overload:BO.Entity.Service.ListOfIntDishes
  name: ListOfIntDishes
  nameWithType: Service.ListOfIntDishes
  fullName: BO.Entity.Service.ListOfIntDishes
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BO.Entity.Service.#ctor*
  commentId: Overload:BO.Entity.Service.#ctor
  name: Service
  nameWithType: Service.Service
  fullName: BO.Entity.Service.Service
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.Service.Equals*
  commentId: Overload:BO.Entity.Service.Equals
  name: Equals
  nameWithType: Service.Equals
  fullName: BO.Entity.Service.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.Service.GetHashCode*
  commentId: Overload:BO.Entity.Service.GetHashCode
  name: GetHashCode
  nameWithType: Service.GetHashCode
  fullName: BO.Entity.Service.GetHashCode
