### YamlMime:ManagedReference
items:
- uid: BLL.Services.ClientService
  commentId: T:BLL.Services.ClientService
  id: ClientService
  parent: BLL.Services
  children:
  - BLL.Services.ClientService.#ctor(DAL.UOW.IUnitOfWork)
  - BLL.Services.ClientService._db
  - BLL.Services.ClientService.CreateClient(BO.Entity.Client)
  langs:
  - csharp
  - vb
  name: ClientService
  nameWithType: ClientService
  fullName: BLL.Services.ClientService
  type: Class
  source:
    remote:
      path: FoodBook/Server/BLL/Services/ClientService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: ClientService
    path: E:/Fbook/FoodBook/Server/BLL/Services/ClientService.cs
    startLine: 11
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: 'class ClientService : IClientService'
    content.vb: >-
      Class ClientService
          Implements IClientService
  inheritance:
  - System.Object
  implements:
  - BLL.Services.IClientService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - class
  modifiers.vb:
  - Class
- uid: BLL.Services.ClientService._db
  commentId: F:BLL.Services.ClientService._db
  id: _db
  parent: BLL.Services.ClientService
  langs:
  - csharp
  - vb
  name: _db
  nameWithType: ClientService._db
  fullName: BLL.Services.ClientService._db
  type: Field
  source:
    remote:
      path: FoodBook/Server/BLL/Services/ClientService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: _db
    path: E:/Fbook/FoodBook/Server/BLL/Services/ClientService.cs
    startLine: 13
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: readonly IUnitOfWork _db
    return:
      type: DAL.UOW.IUnitOfWork
    content.vb: ReadOnly _db As IUnitOfWork
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: BLL.Services.ClientService.#ctor(DAL.UOW.IUnitOfWork)
  commentId: M:BLL.Services.ClientService.#ctor(DAL.UOW.IUnitOfWork)
  id: '#ctor(DAL.UOW.IUnitOfWork)'
  parent: BLL.Services.ClientService
  langs:
  - csharp
  - vb
  name: ClientService(IUnitOfWork)
  nameWithType: ClientService.ClientService(IUnitOfWork)
  fullName: BLL.Services.ClientService.ClientService(DAL.UOW.IUnitOfWork)
  type: Constructor
  source:
    remote:
      path: FoodBook/Server/BLL/Services/ClientService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: .ctor
    path: E:/Fbook/FoodBook/Server/BLL/Services/ClientService.cs
    startLine: 14
  assemblies:
  - BLL
  namespace: BLL.Services
  syntax:
    content: public ClientService(IUnitOfWork unitOfWork)
    parameters:
    - id: unitOfWork
      type: DAL.UOW.IUnitOfWork
    content.vb: Public Sub New(unitOfWork As IUnitOfWork)
  overload: BLL.Services.ClientService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BLL.Services.ClientService.CreateClient(BO.Entity.Client)
  commentId: M:BLL.Services.ClientService.CreateClient(BO.Entity.Client)
  id: CreateClient(BO.Entity.Client)
  parent: BLL.Services.ClientService
  langs:
  - csharp
  - vb
  name: CreateClient(Client)
  nameWithType: ClientService.CreateClient(Client)
  fullName: BLL.Services.ClientService.CreateClient(BO.Entity.Client)
  type: Method
  source:
    remote:
      path: FoodBook/Server/BLL/Services/ClientService.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: CreateClient
    path: E:/Fbook/FoodBook/Server/BLL/Services/ClientService.cs
    startLine: 29
  assemblies:
  - BLL
  namespace: BLL.Services
  summary: "\nCreate NewClient with a Client\n"
  example: []
  syntax:
    content: public Task<Client> CreateClient(Client client)
    parameters:
    - id: client
      type: BO.Entity.Client
      description: Client
    return:
      type: System.Threading.Tasks.Task{BO.Entity.Client}
      description: New Client
    content.vb: Public Function CreateClient(client As Client) As Task(Of Client)
  overload: BLL.Services.ClientService.CreateClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BLL.Services
  commentId: N:BLL.Services
  name: BLL.Services
  nameWithType: BLL.Services
  fullName: BLL.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BLL.Services.IClientService
  commentId: T:BLL.Services.IClientService
  parent: BLL.Services
  name: IClientService
  nameWithType: IClientService
  fullName: BLL.Services.IClientService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DAL.UOW.IUnitOfWork
  commentId: T:DAL.UOW.IUnitOfWork
  parent: DAL.UOW
  name: IUnitOfWork
  nameWithType: IUnitOfWork
  fullName: DAL.UOW.IUnitOfWork
- uid: DAL.UOW
  commentId: N:DAL.UOW
  name: DAL.UOW
  nameWithType: DAL.UOW
  fullName: DAL.UOW
- uid: BLL.Services.ClientService.#ctor*
  commentId: Overload:BLL.Services.ClientService.#ctor
  name: ClientService
  nameWithType: ClientService.ClientService
  fullName: BLL.Services.ClientService.ClientService
- uid: BLL.Services.ClientService.CreateClient*
  commentId: Overload:BLL.Services.ClientService.CreateClient
  name: CreateClient
  nameWithType: ClientService.CreateClient
  fullName: BLL.Services.ClientService.CreateClient
- uid: BO.Entity.Client
  commentId: T:BO.Entity.Client
  parent: BO.Entity
  name: Client
  nameWithType: Client
  fullName: BO.Entity.Client
- uid: System.Threading.Tasks.Task{BO.Entity.Client}
  commentId: T:System.Threading.Tasks.Task{BO.Entity.Client}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Client>
  nameWithType: Task<Client>
  fullName: System.Threading.Tasks.Task<BO.Entity.Client>
  nameWithType.vb: Task(Of Client)
  fullName.vb: System.Threading.Tasks.Task(Of BO.Entity.Client)
  name.vb: Task(Of Client)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BO.Entity.Client
    name: Client
    nameWithType: Client
    fullName: BO.Entity.Client
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BO.Entity.Client
    name: Client
    nameWithType: Client
    fullName: BO.Entity.Client
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity
  commentId: N:BO.Entity
  name: BO.Entity
  nameWithType: BO.Entity
  fullName: BO.Entity
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
