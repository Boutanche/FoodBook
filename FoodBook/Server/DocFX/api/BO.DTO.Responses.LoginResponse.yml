### YamlMime:ManagedReference
items:
- uid: BO.DTO.Responses.LoginResponse
  commentId: T:BO.DTO.Responses.LoginResponse
  id: LoginResponse
  parent: BO.DTO.Responses
  children:
  - BO.DTO.Responses.LoginResponse.#ctor
  - BO.DTO.Responses.LoginResponse.AccessToken
  - BO.DTO.Responses.LoginResponse.Username
  langs:
  - csharp
  - vb
  name: LoginResponse
  nameWithType: LoginResponse
  fullName: BO.DTO.Responses.LoginResponse
  type: Class
  source:
    remote:
      path: FoodBook/BO/DTO/Responses/LoginResponse.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: LoginResponse
    path: E:/Fbook/FoodBook/BO/DTO/Responses/LoginResponse.cs
    startLine: 11
  assemblies:
  - BO
  namespace: BO.DTO.Responses
  summary: "\n\n"
  example: []
  syntax:
    content: public class LoginResponse
    content.vb: Public Class LoginResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BO.DTO.Responses.LoginResponse.AccessToken
  commentId: P:BO.DTO.Responses.LoginResponse.AccessToken
  id: AccessToken
  parent: BO.DTO.Responses.LoginResponse
  langs:
  - csharp
  - vb
  name: AccessToken
  nameWithType: LoginResponse.AccessToken
  fullName: BO.DTO.Responses.LoginResponse.AccessToken
  type: Property
  source:
    remote:
      path: FoodBook/BO/DTO/Responses/LoginResponse.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: AccessToken
    path: E:/Fbook/FoodBook/BO/DTO/Responses/LoginResponse.cs
    startLine: 16
  assemblies:
  - BO
  namespace: BO.DTO.Responses
  summary: "\nC&apos;est le JWT !!IMPORTANT!!\n"
  example: []
  syntax:
    content: public string AccessToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AccessToken As String
  overload: BO.DTO.Responses.LoginResponse.AccessToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.DTO.Responses.LoginResponse.Username
  commentId: P:BO.DTO.Responses.LoginResponse.Username
  id: Username
  parent: BO.DTO.Responses.LoginResponse
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: LoginResponse.Username
  fullName: BO.DTO.Responses.LoginResponse.Username
  type: Property
  source:
    remote:
      path: FoodBook/BO/DTO/Responses/LoginResponse.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: Username
    path: E:/Fbook/FoodBook/BO/DTO/Responses/LoginResponse.cs
    startLine: 20
  assemblies:
  - BO
  namespace: BO.DTO.Responses
  summary: "\n\n"
  example: []
  syntax:
    content: public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Username As String
  overload: BO.DTO.Responses.LoginResponse.Username*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.DTO.Responses.LoginResponse.#ctor
  commentId: M:BO.DTO.Responses.LoginResponse.#ctor
  id: '#ctor'
  parent: BO.DTO.Responses.LoginResponse
  langs:
  - csharp
  - vb
  name: LoginResponse()
  nameWithType: LoginResponse.LoginResponse()
  fullName: BO.DTO.Responses.LoginResponse.LoginResponse()
  type: Constructor
  source:
    remote:
      path: FoodBook/BO/DTO/Responses/LoginResponse.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: .ctor
    path: E:/Fbook/FoodBook/BO/DTO/Responses/LoginResponse.cs
    startLine: 24
  assemblies:
  - BO
  namespace: BO.DTO.Responses
  summary: "\n\n"
  example: []
  syntax:
    content: public LoginResponse()
    content.vb: Public Sub New
  overload: BO.DTO.Responses.LoginResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BO.DTO.Responses
  commentId: N:BO.DTO.Responses
  name: BO.DTO.Responses
  nameWithType: BO.DTO.Responses
  fullName: BO.DTO.Responses
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BO.DTO.Responses.LoginResponse.AccessToken*
  commentId: Overload:BO.DTO.Responses.LoginResponse.AccessToken
  name: AccessToken
  nameWithType: LoginResponse.AccessToken
  fullName: BO.DTO.Responses.LoginResponse.AccessToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BO.DTO.Responses.LoginResponse.Username*
  commentId: Overload:BO.DTO.Responses.LoginResponse.Username
  name: Username
  nameWithType: LoginResponse.Username
  fullName: BO.DTO.Responses.LoginResponse.Username
- uid: BO.DTO.Responses.LoginResponse.#ctor*
  commentId: Overload:BO.DTO.Responses.LoginResponse.#ctor
  name: LoginResponse
  nameWithType: LoginResponse.LoginResponse
  fullName: BO.DTO.Responses.LoginResponse.LoginResponse
