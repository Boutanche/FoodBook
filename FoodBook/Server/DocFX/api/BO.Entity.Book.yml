### YamlMime:ManagedReference
items:
- uid: BO.Entity.Book
  commentId: T:BO.Entity.Book
  id: Book
  parent: BO.Entity
  children:
  - BO.Entity.Book.#ctor
  - BO.Entity.Book.#ctor(System.Int32,System.String,System.String,System.String)
  - BO.Entity.Book.Description
  - BO.Entity.Book.Equals(System.Object)
  - BO.Entity.Book.GetHashCode
  - BO.Entity.Book.Id
  - BO.Entity.Book.ISBN
  - BO.Entity.Book.Title
  langs:
  - csharp
  - vb
  name: Book
  nameWithType: Book
  fullName: BO.Entity.Book
  type: Class
  source:
    remote:
      path: FoodBook/BO/Entity/Book.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: Book
    path: E:/Fbook/FoodBook/BO/Entity/Book.cs
    startLine: 7
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nReprésente un objet livre\n"
  example: []
  syntax:
    content: public class Book
    content.vb: Public Class Book
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BO.Entity.Book.Id
  commentId: P:BO.Entity.Book.Id
  id: Id
  parent: BO.Entity.Book
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Book.Id
  fullName: BO.Entity.Book.Id
  type: Property
  source:
    remote:
      path: FoodBook/BO/Entity/Book.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: Id
    path: E:/Fbook/FoodBook/BO/Entity/Book.cs
    startLine: 12
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nIdentifiant unique du livre\n"
  example: []
  syntax:
    content: public int? Id { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Id As Integer?
  overload: BO.Entity.Book.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.Entity.Book.ISBN
  commentId: P:BO.Entity.Book.ISBN
  id: ISBN
  parent: BO.Entity.Book
  langs:
  - csharp
  - vb
  name: ISBN
  nameWithType: Book.ISBN
  fullName: BO.Entity.Book.ISBN
  type: Property
  source:
    remote:
      path: FoodBook/BO/Entity/Book.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: ISBN
    path: E:/Fbook/FoodBook/BO/Entity/Book.cs
    startLine: 17
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nISBN unique du livre\n"
  example: []
  syntax:
    content: public string ISBN { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ISBN As String
  overload: BO.Entity.Book.ISBN*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.Entity.Book.Title
  commentId: P:BO.Entity.Book.Title
  id: Title
  parent: BO.Entity.Book
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: Book.Title
  fullName: BO.Entity.Book.Title
  type: Property
  source:
    remote:
      path: FoodBook/BO/Entity/Book.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: Title
    path: E:/Fbook/FoodBook/BO/Entity/Book.cs
    startLine: 22
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nTitre du livre\n"
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: BO.Entity.Book.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.Entity.Book.Description
  commentId: P:BO.Entity.Book.Description
  id: Description
  parent: BO.Entity.Book
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Book.Description
  fullName: BO.Entity.Book.Description
  type: Property
  source:
    remote:
      path: FoodBook/BO/Entity/Book.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: Description
    path: E:/Fbook/FoodBook/BO/Entity/Book.cs
    startLine: 27
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nRésumé du livre\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: BO.Entity.Book.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BO.Entity.Book.#ctor
  commentId: M:BO.Entity.Book.#ctor
  id: '#ctor'
  parent: BO.Entity.Book
  langs:
  - csharp
  - vb
  name: Book()
  nameWithType: Book.Book()
  fullName: BO.Entity.Book.Book()
  type: Constructor
  source:
    remote:
      path: FoodBook/BO/Entity/Book.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: .ctor
    path: E:/Fbook/FoodBook/BO/Entity/Book.cs
    startLine: 32
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nDefault constructor for API serialisation\n"
  example: []
  syntax:
    content: public Book()
    content.vb: Public Sub New
  overload: BO.Entity.Book.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BO.Entity.Book.#ctor(System.Int32,System.String,System.String,System.String)
  commentId: M:BO.Entity.Book.#ctor(System.Int32,System.String,System.String,System.String)
  id: '#ctor(System.Int32,System.String,System.String,System.String)'
  parent: BO.Entity.Book
  langs:
  - csharp
  - vb
  name: Book(Int32, String, String, String)
  nameWithType: Book.Book(Int32, String, String, String)
  fullName: BO.Entity.Book.Book(System.Int32, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: FoodBook/BO/Entity/Book.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: .ctor
    path: E:/Fbook/FoodBook/BO/Entity/Book.cs
    startLine: 41
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\nConstructeur utilitaire full properties\n"
  example: []
  syntax:
    content: public Book(int bookId, string iSBN, string title, string description)
    parameters:
    - id: bookId
      type: System.Int32
      description: Identifiant of book
    - id: iSBN
      type: System.String
      description: 'IBN of book '
    - id: title
      type: System.String
      description: 'Book title '
    - id: description
      type: System.String
      description: Summary of book
    content.vb: Public Sub New(bookId As Integer, iSBN As String, title As String, description As String)
  overload: BO.Entity.Book.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BO.Entity.Book.Equals(System.Object)
  commentId: M:BO.Entity.Book.Equals(System.Object)
  id: Equals(System.Object)
  parent: BO.Entity.Book
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Book.Equals(Object)
  fullName: BO.Entity.Book.Equals(System.Object)
  type: Method
  source:
    remote:
      path: FoodBook/BO/Entity/Book.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: Equals
    path: E:/Fbook/FoodBook/BO/Entity/Book.cs
    startLine: 53
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\n\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: BO.Entity.Book.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BO.Entity.Book.GetHashCode
  commentId: M:BO.Entity.Book.GetHashCode
  id: GetHashCode
  parent: BO.Entity.Book
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Book.GetHashCode()
  fullName: BO.Entity.Book.GetHashCode()
  type: Method
  source:
    remote:
      path: FoodBook/BO/Entity/Book.cs
      branch: main
      repo: https://github.com/Boutanche/FoodBook/
    id: GetHashCode
    path: E:/Fbook/FoodBook/BO/Entity/Book.cs
    startLine: 65
  assemblies:
  - BO
  namespace: BO.Entity
  summary: "\n\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: BO.Entity.Book.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BO.Entity
  commentId: N:BO.Entity
  name: BO.Entity
  nameWithType: BO.Entity
  fullName: BO.Entity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BO.Entity.Book.Id*
  commentId: Overload:BO.Entity.Book.Id
  name: Id
  nameWithType: Book.Id
  fullName: BO.Entity.Book.Id
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.Book.ISBN*
  commentId: Overload:BO.Entity.Book.ISBN
  name: ISBN
  nameWithType: Book.ISBN
  fullName: BO.Entity.Book.ISBN
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BO.Entity.Book.Title*
  commentId: Overload:BO.Entity.Book.Title
  name: Title
  nameWithType: Book.Title
  fullName: BO.Entity.Book.Title
- uid: BO.Entity.Book.Description*
  commentId: Overload:BO.Entity.Book.Description
  name: Description
  nameWithType: Book.Description
  fullName: BO.Entity.Book.Description
- uid: BO.Entity.Book.#ctor*
  commentId: Overload:BO.Entity.Book.#ctor
  name: Book
  nameWithType: Book.Book
  fullName: BO.Entity.Book.Book
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.Book.Equals*
  commentId: Overload:BO.Entity.Book.Equals
  name: Equals
  nameWithType: Book.Equals
  fullName: BO.Entity.Book.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BO.Entity.Book.GetHashCode*
  commentId: Overload:BO.Entity.Book.GetHashCode
  name: GetHashCode
  nameWithType: Book.GetHashCode
  fullName: BO.Entity.Book.GetHashCode
